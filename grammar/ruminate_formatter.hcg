# Copyright (C) 2021 Anthony Weathersby - The Ruminate Formatter Grammar
# see /source/typescript/hydrocarbon.ts for full copyright and warranty 
# disclaimer notice.

@EXPORT note as note
@EXPORT section_line_content as content

<> note > line(+)

<> line > 
        code_block

        | 

        line_header section_line_content?
        
        f:r { new env.SectionNode($1[0], $1[1], [...$1.slice(2), ...$2]) }


<> code_block > g:nl \``` text? code_line(*) code_block_sentinel

        f:r { new env.SectionNode("code-block", { data:$3 }, $4 ) }

<> line_header > 

    g:nl ( \###### | \##### | \#### | \### | \## | \# )

        f:r { ["header", {level:$2.length}] }

    |   g:nl (( \* | g:num \) f:r{$1} ) g:sp f:r{$1})(+)

        f:r { ["bullet-header", {level:$2} ] }

    |   g:nl (( \> ) g:sp)(+)

        f:r {  [ "quote", {level:$2} ] }
    
    |   g:nl \#######

        f:r { ["paragraph", null, ["text", {text:$2 || ""} ] ] }

    |   g:nl \````

        f:r { [ "paragraph", null, ["text", {text:$2 || ""} ] ] }

    |   g:nl

        f:r { [ "paragraph", null ] }

<> code_block_sentinel >

    \``` | g:rec

<[ recover code_block_sentinel_1 ] 

    scan back until [ $eof ] then consume nothing
>

<> code_line >

        g:nl code_line_text?

        f:r { ["text", {text:$2 || ""} ] }

<> code_line_text > 
    (   g:num 
    |   g:sp
    |   g:id 
    |   g:sym
    )(+\" )

<> section_line_content > section_primitive(+)

<> section_primitive > 
        text 
    |   format_markerA
    |   format_markerB
    |   format_markerC
    |   note_insertion
    #inline_code
    #italic
    #underline

<> note_insertion >

    \@[ g:num \]

        f:r { ["note-insertion", {query_id:$2}] }

<> text > 
    (   g:num 
    |   g:sp
    |   g:id 
    |   g:sym
    )(+\" )

        f:r { ["text", {text:$1}] }

<> format_markerA > 

        \*

        f:r { ["format-marker-A"] }

<> format_markerB > 

        \_

        f:r { ["format-marker-B"] }

<> format_markerC > 

        \`

        f:r { ["format-marker-C"] }
        
        



