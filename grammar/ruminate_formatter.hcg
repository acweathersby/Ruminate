# Copyright (C) 2021 Anthony Weathersby - The Ruminate Formatter Grammar
# see /source/typescript/hydrocarbon.ts for full copyright and warranty 
# disclaimer notice.

@EXPORT note as note
@EXPORT section_line_content as content

<> note > line(+)

        f:r { { t_Markdown, lines: $1 } }

<> line > 
        code_block

        | 

        line_header section_line_content?

        f:r { { t_Line, header:$1, content:$2 } }


<> code_block > g:nl \``` text? code_line(*) code_block_sentinel

        f:r { { t_CodeBlock, syntax:str($2), data:$3 } }

<> line_header > 

    g:nl ( \###### | \##### | \#### | \### | \## | \# )

        f:r { { t_Header, val:str($2) } }

    |   g:nl (( \* | g:num \) f:r{$1} ) g:sp f:r{$1})(+)

        f:r { { t_BulletHeader, level:str($2) } }

    |   g:nl (( \> ) g:sp)(+)

        f:r { { t_Quote, level:str($2) } }
    
    |   g:nl \#######

        f:r { { t_Paragraph, text: str($2) } }

    |   g:nl \````

        f:r { { t_Paragraph, text: str($2) } }

    |   g:nl

        f:r { { t_Paragraph, text: str("") } }

<> code_block_sentinel >

    \``` | g:rec

<[ recover code_block_sentinel_1 ] 

    scan back until [ $eof ] then consume nothing
>

<> code_line >

        g:nl code_line_text?

        f:r { { t_Text, text: str($2) } }

<> code_line_text > 
    (   g:num 
    |   g:sp
    |   g:id 
    |   g:sym
    )(+\" )

<> section_line_content > section_primitive(+)

<> section_primitive > 
        text 
    |   format_markerA
    |   format_markerB
    |   format_markerC
    |   note_insertion
    #inline_code
    #italic
    #underline

<> note_insertion >

    \@{ code_line_text \}

        f:r { { t_Query, query: str($2) } }

<> text > 
    (   g:num 
    |   g:sp
    |   g:id 
    |   g:sym
    )(+\" )

        f:r { { t_Text, text: str($1) } }

<> format_markerA > 

        \*

        f:r { { t_MarkerA } }

<> format_markerB > 

        \_

        f:r { { t_MarkerB } }

<> format_markerC > 

        \`

        f:r { { t_MarkerC } }
        
        



