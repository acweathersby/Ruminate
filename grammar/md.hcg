@EXPORT markdown as md

<> markdown > lines

    f:r { {t_Markdown, lines:$1 } }

<> lines > g:nl? ro_line

    f:r { [$2] }
    
    | lines g:nl ro_line
    
    f:r { $1 + [$3] }

    | lines g:nl 

    f:r { $1 + [{ t_EmptyLine, c_Line }]}

<> ro_line > line
    
    read_only line f:r{ $2.read_only = true, $2 }

<> read_only >  \>< 

<> line >

    header_token content

    f:r { { t_Header, c_Line, length:f64($1), content:$2, read_only:false } }

    | 
    
    tk:spaces? tk:ol_token content

    f:r { { t_OL, c_Line, spaces:str($1), content:$3, read_only:false } }

    |

    tk:spaces? tk:ul_token content

    f:r { { t_UL, c_Line, spaces:str($1), content:$3, read_only:false } }

    |

    tk:spaces? tk:quote_token content

    f:r { { t_Quote, c_Line, spaces:str($1), content:$3, read_only:false } }

    | 

    tk:spaces? content

    f:r { { t_Paragraph, c_Line, spaces:str($1), content:$2, read_only:false } }

    |
     
    tk:code_block_delimiter code_line_text? code_line(*) cb_sentinel

    f:r { { t_CodeBlock, c_Line, syntax:str($2), data:$3, read_only:false } }


<> spaces > 

    (g:sp)(*)

<> header_token > 

    \# (+)

<> ol_token > 
    
    g:num \.    

<> ul_token > 
    
    ( \- | \+ )  

<> quote_token > 
    
    \>           

<> code_line >

    g:nl code_line_text?

    f:r { { t_Text, c_Content, value: str($2) } }

<> code_block_delimiter > \```

<> code_block_delimiter_with_nl > g:nl \```

<> cb_sentinel > tk:code_block_delimiter_with_nl | g:rec

<[ recover cb_sentinel_1 ] 

    consume nothing then set prod to cb_sentinel
>

<> code_line_text > 
    (   g:num 
    |   g:sp
    |   g:id 
    |   g:sym
    )(+\" )

<> code_block_sentinel >

    g:nl \``` 

<> content > ( text | ! format_symbol )(+)

<> text > ! text_symbol(+\" )
    f:r { { t_Text, c_Content, value: $1 } }

<> text_symbol > 
        g:sym
    |   g:sp
    |   tk:word
    |   tk:num

<> word > g:id 
    | word g:id

<> num > g:num
    | num g:num

<> format_symbol > 
    \` 
    f:r { { t_InlineCode, c_Content } }
    | \* 
    f:r { { t_MarkerA, c_Content } }
    | \_ 
    f:r { { t_MarkerB, c_Content } }
    | \{
    f:r { { t_QueryStart, c_Content } }
    | \}
    f:r { { t_QueryEnd, c_Content } }
    | \[ 
    f:r { { t_AnchorStart, c_Content } }
    | \![
    f:r { { t_AnchorImageStart, c_Content } }
    | \]
    f:r { { t_AnchorEnd, c_Content } }
    | \](
    f:r { { t_AnchorMiddle, c_Content } }
    | \)
    f:r { { t_AnchorEnd, c_Content, c_Meta } }
    | \(
    f:r { { t_MetaStart, c_Content, c_Meta } }
