# Graze Note Query Language

@IGNORE θws θnl 

@SYMBOL (( ))

↦ reducenode 	{ this.text_end = lex.off; this.type ="REDUCE"; 	this.value=$$sym2; this.meta=$$sym4; }

<> ReduceTree → tree

<> tree → item(*) 								

<> item → string_data(+") 					
	│ data_insert_point 						

<> data_insert_point → \(( data_string \)) ( \[  data_string? \] ↦r{ $sym2 } )?		↦c=>reducenode
	│ \(( data_string 							↦r { $sym1 + $sym2 }

<> data_string → ( string_data_val(*") )

<> string_data → string_data_val

<> string_data_val → string_symbols 
	│ escaped_value
	│ θws 
	│ θnl 

<> escaped_value → \\ string_symbols 		↦r {$$sym2}

<> string_symbols → θid │ θany │ θsym │ θop │ θcb │ θob 
