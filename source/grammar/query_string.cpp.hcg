#Ruminate Note Query Language

@SYMBOL && ||

@IGNORE θws θnl 

# Special Search / Filter Types


<> goal → start

<> start → query_body

<> query_body → [container_clause? filter_clause? sort_clause?]                  ↦c ^QUERY_Body

## Container Clause

<> container_clause →  \/? container_identifier_list? identifier?               ↦c ^QUERY_Container

<> container_identifier_list →  container_identifier_list container_identifier  ↦c ^QUERY_ContainerIdentifierList
    │ container_identifier                                                      ↦c ^QUERY_ContainerIdentifierList         

<> container_identifier → identifier \/                                         ↦c ^QUERY_ContainerIdentifier

## Filter Clause ############################################################################################

<> filter_clause → 
    ( \? :? │ τf :? │ τfilter :? │ τFilter │ τFILTER :? )  
        and_expression?                                                 ↦c ^QUERY_Filter
        
<> and_expression → or_expression
    │ or_expression && and_expression                                   ↦c ^QUERY_And
    │ or_expression τAND and_expression                                 ↦c ^QUERY_And
    │ or_expression τAnd and_expression                                 ↦c ^QUERY_And
    │ or_expression τand and_expression                                 ↦c ^QUERY_And

<> or_expression → not_expression
    │ not_expression || or_expression                                   ↦c ^QUERY_Or
    │ not_expression τOR or_expression                                  ↦c ^QUERY_Or
    │ not_expression τOr or_expression                                  ↦c ^QUERY_Or
    │ not_expression τor or_expression                                  ↦c ^QUERY_Or

<> not_expression → wrapped_expression
    │ τNOT wrapped_expression                                           ↦r ^QUERY_Not
    │ τNot wrapped_expression                                           ↦r ^QUERY_Not
    │ τnot wrapped_expression                                           ↦r ^QUERY_Not
    │ \!   wrapped_expression                                           ↦r ^QUERY_Not

<> wrapped_expression → \( and_expression \)                            ↦c ^QUERY_Wrapped
    │ sentence                                                          
    │ identifier                                                        
    │ statement 

## Sort Clause ############################################################################################

<> sort_clause → 
    ( \| │ τs :? │ τsort :? │ τSORT :? │ τSort :? ) statement_list     ↦r ^QUERY_Sort

<> statement_list → statement_list , statement                         ↦r ^QUERY_SortList
    │ statement                                                        ↦r ^QUERY_SortList

<> statement → created_statement
    │ modified_statement
    │ size_statement
    │ tag_statement

<> created_statement → 

    (τcreated │ τCREATED) comparison_expression? order?              ↦c ^QUERY_Created

<> modified_statement → 

    (τmodifier │ τMODIFIED) comparison_expression? order?            ↦c ^QUERY_Modified

<> size_statement → 

    (τsize │ τSIZE) comparison_expression order?                    ↦c ^QUERY_Size

<> tag_statement →  

    \# identifier comparison_expression? order?                     ↦c ^QUERY_Tag
    
<> comparison_expression → 

      (τis │ τequals │ = │ τthat τis)  number                       ↦r ^QUERY_ComparisonEquals
    │ (τis │ τequals │ = │ τthat τis)  identifier                   ↦r ^QUERY_ComparisonEquals
    │ (τis τgreater τthan? │ > │ τgreater) number                   ↦r ^QUERY_ComparisonMore
    │ (τis τless τthan? │ < │ τlesser) number                       ↦r ^QUERY_ComparisonLess
    │ τis? range_expression                                         ↦r ^LAST
    │ τis? date_expression                                          ↦r ^LAST 

<> range_expression → (τfrom) number 
    ( (τto │ - │ τTO │ τTo │ τthrough ) number)?                    ↦r ^QUERY_Range

<> date_expression → (τon │ τdate) ( (string_data │ number) ↦r ^QUERY_Date)
    ( (τto │ -│ τTO │ τTo ) ( (string_data │ number) ↦r ^QUERY_Date) ↦r ^LAST)?  ↦c ^QUERY_Date

<>order → (τDES │ τdes │ τdescending │ τDESCENDING │ τdown │ >)     ↦c ^QUERY_OrderDescending
    │ (τASC │ τasc │ τascending │ τASCENDING │ τup │ <)             ↦c ^QUERY_OrderAscending

<> identifier → identifier identifier_part                          ↦c ^QUERY_Identifier
    │ identifier_part                                               ↦c ^QUERY_Identifier

<> identifier_part → wild_card                                              
    │ string_data

<> sentence → \" string_data \"                                     ↦r ^QUERY_Sentence
    │ \' string_data \'                                             ↦r ^QUERY_Sentence

<> string_data → string_symbols string_data_val?                    ↦r ^StringData

<> wild_card → \*                                                   ↦r ^StringData

<> string_data_val → 
      string_data_val string_symbols                                ↦r ^StringData
    │ string_data_val escaped_value                                 ↦r ^StringData
    │ string_data_val white_space                                   ↦r ^StringData
    │ string_symbols                                                ↦r ^StringData
    │ escaped_value                                                 ↦r ^StringData
    │ white_space                                                   ↦r ^StringData

<> escaped_value → \\ string_symbols                                ↦r ^QUERY_EscapedValue

<> white_space → θws                                                ↦r ^StringData

<> string_symbols → θany                                            ↦r ^StringData
    │ θsym                                                          ↦r ^StringData
    │ θop                                                           ↦r ^StringData
    │ θid                                                           ↦r ^StringData

<> number → θnum                                                    ↦r ^Number


