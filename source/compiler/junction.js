let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["((","))","&&","||"],

    /* Goto lookup maps */
    gt0 = [0,-2,2,1,-2,3,-3,4,5,7,6],
gt1 = [0,-2,18,-3,19,-3,4,5,7,6],
gt2 = [0,-10,20,5,7,6],
gt3 = [0,-13,21],
gt4 = [0,-14,22,24,25,30,26,32,43,27,-5,49,-1,28,-24,33,31,34,-2,36,35,-2,38],
gt5 = [0,-5,56],
gt6 = [0,-20,43,58,-5,49,-1,59],
gt7 = [0,-27,49,-1,60],
gt8 = [0,-17,61,-1,32,-34,33,62,34,-2,36,35,-2,38],
gt9 = [0,-19,64,-34,33,63,34,-2,36,35,-2,38],
gt10 = [0,-56,66,-2,36,35,-2,38],
gt11 = [0,-58,67,-2,68,70,69],
gt12 = [0,-23,73,74,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt13 = [0,-28,105,-1,106,91,87,94,88,97,89,90],
gt14 = [0,-5,111],
gt15 = [0,-4,112,-2,116,115,114,-1,117,7,6],
gt16 = [0,-27,49,-1,118],
gt17 = [0,-19,64,-34,33,119,34,-2,36,35,-2,38],
gt18 = [0,-61,120,70,69],
gt19 = [0,-63,121],
gt20 = [0,-26,130,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt21 = [0,-26,131,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt22 = [0,-26,132,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt23 = [0,-26,133,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt24 = [0,-22,134,135,74,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt25 = [0,-59,136,-3,38],
gt26 = [0,-59,137,-3,38],
gt27 = [0,-38,140,141,142,138,153,-2,144,155,-3,145,158,159,139],
gt28 = [0,-38,140,141,142,170,153,-2,144,155,-3,145,158,159,171],
gt29 = [0,-38,140,141,142,172,153,-2,144,155,-3,145],
gt30 = [0,-54,33,175,34,-2,36,35,-2,38],
gt31 = [0,-11,179,7,6],
gt32 = [0,-23,180,74,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt33 = [0,-23,181,74,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt34 = [0,-23,182,74,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt35 = [0,-23,183,74,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt36 = [0,-24,184,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt37 = [0,-24,185,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt38 = [0,-24,186,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt39 = [0,-24,187,75,76,-3,84,91,87,94,88,97,89,90,-16,33,83,34,82,-1,36,35,-2,38],
gt40 = [0,-51,158,159,191],
gt41 = [0,-54,33,195,34,-2,36,35,-2,38],
gt42 = [0,-42,153,-2,198,155,-3,199],
gt43 = [0,-47,204,-11,205,-3,38],
gt44 = [0,-51,158,159,207],
gt45 = [0,-51,158,159,208],
gt46 = [0,-38,140,141,142,209,153,-2,144,155,-3,145,158,159,210],
gt47 = [0,-30,211,91,87,94,88,97,89,90],
gt48 = [0,-7,116,115,212,-1,117,7,6],
gt49 = [0,-43,216,215],
gt50 = [0,-48,223,222],
gt51 = [0,-51,158,159,228],
gt52 = [0,-47,230,-11,205,-3,38],

    // State action lookup maps
    sm0=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-4,9,-3,10],
sm1=[0,11,-1,1,-1,2,3,4,5,6,7,-3,8,-4,9,-3,10],
sm2=[0,12,-1,1,-1,2,3,4,5,6,7,-3,8,-4,12,-3,10],
sm3=[0,13,-1,13,-1,13,13,13,13,13,13,-3,13,-4,13,-3,13],
sm4=[0,14,-1,14,-1,14,14,14,14,14,14,-3,14,-4,14,-3,14],
sm5=[0,15,-1,15,-1,15,15,15,15,15,15,-3,15,-4,15,-3,15],
sm6=[0,16,-1,16,-1,16,16,16,16,16,16,-3,16,-1,16,-1,16,16,-3,16],
sm7=[0,17,-1,17,-1,17,17,17,17,17,17,-3,17,-1,17,-1,17,17,-3,17],
sm8=[0,-2,1,-1,0,3,4,5,6,0,-3,8],
sm9=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,22,-9,23,24,-1,25,26,27,28,-14,29,30,31,32,33,-38,34],
sm10=[0,35,-1,1,-1,2,3,4,5,6,7,-3,8,-4,35,-3,10],
sm11=[0,36,-1,36,-1,36,36,36,36,36,36,-3,36,-4,36,-3,36],
sm12=[0,37,-1,37,-1,37,37,37,37,37,37,-3,37,-4,37,-3,37],
sm13=[0,38,-1,38,-1,38,38,38,38,38,38,-3,38,-1,38,-1,38,38,-3,38],
sm14=[0,-4,0,-4,0,-9,39],
sm15=[0,40,-1,40,-1,40,40,40,40,40,40,-3,40,-2,41,-1,40,-3,40],
sm16=[0,-4,0,-4,0,-9,42],
sm17=[0,-4,0,-4,0,-9,43],
sm18=[0,-4,0,-4,0,-9,44,-10,24,-1,25,26,27,28,-14,29,30,31,32,33],
sm19=[0,-4,0,-4,0,-9,45,-30,29,30,31,32,33],
sm20=[0,-4,0,-4,0,-9,46],
sm21=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,47,-10,47,-1,47,47,47,47,-14,47,47,47,47,47,-38,34],
sm22=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,48,-10,48,-1,48,48,48,48,-14,48,48,48,48,48,-38,34],
sm23=[0,-4,0,-4,0,-9,49,-9,50,49,-1,49,49,49,49,-14,49,49,49,49,49],
sm24=[0,-2,51,-1,0,-2,51,51,0,-3,51,-5,51,-10,51,-1,51,51,51,51,-14,51,51,51,51,51,-38,51],
sm25=[0,-2,18,-1,0,-2,19,20,0,-3,21,-1,52,-3,52,-9,52,52,-1,52,52,52,52,52,52,52,52,52,52,52,52,-5,52,52,52,52,52,52,-7,52,52,52,52,52,-1,52,-1,52,52,-1,52,-5,52,52,52,52,52,52,52,52,52,52,52,52,-2,34],
sm26=[0,-2,53,-1,0,-2,53,53,0,-3,53,-1,53,-3,53,-9,53,53,-1,53,53,53,53,53,53,53,53,53,53,53,53,-5,53,53,53,53,53,53,-7,53,53,53,53,53,-1,53,-1,53,53,-1,53,-5,53,53,53,53,53,53,53,53,53,53,53,53,-2,53],
sm27=[0,-2,54,-1,0,-2,54,54,0,-3,54,-1,54,-3,54,-9,54,54,-1,54,54,54,54,54,54,54,54,54,54,54,54,-5,54,54,54,54,54,54,-7,54,54,54,54,54,-1,54,-1,54,54,-1,54,-5,54,54,54,54,54,54,54,54,54,54,54,54,-2,54],
sm28=[0,-2,55,-1,0,-2,55,55,0,-3,55,-1,55,-3,55,-9,55,55,-1,55,55,55,55,55,55,55,55,55,55,55,55,-5,55,55,55,55,55,55,-7,55,55,55,55,55,-1,55,-1,55,55,-1,55,-5,55,55,55,55,55,55,55,55,55,55,55,55,-2,55],
sm29=[0,-2,18,-1,56,-2,19,20,0,-3,21,-1,57,-3,57,-2,58,-6,57,57,-1,57,57,57,57,57,57,57,57,57,57,57,57,-5,57,57,57,57,57,57,-7,57,57,57,57,57,-1,57,-1,57,57,-1,57,57,57,57,57,-1,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],
sm30=[0,-2,59,-1,59,-2,59,59,0,-3,59,-1,59,-3,59,-2,59,-6,59,59,-1,59,59,59,59,59,59,59,59,59,59,59,59,-5,59,59,59,59,59,59,-7,59,59,59,59,59,-1,59,-1,59,59,-1,59,59,59,59,59,-1,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],
sm31=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,60,-24,61,62,63,64,65,-1,60,60,60,60,60,66,67,68,69,70,71,72,-29,73,74,34],
sm32=[0,-2,75,-1,0,-2,75,75,0,-3,75,-5,75,-11,76,-12,75,75,75,75,75,-1,75,75,75,75,75,75,75,75,75,75,75,75,-29,75,75,75],
sm33=[0,-2,75,-1,0,-2,75,75,0,-3,75,-5,75,-11,77,-12,75,75,75,75,75,-1,75,75,75,75,75,75,75,75,75,75,75,75,-29,75,75,75],
sm34=[0,-2,75,-1,0,-2,75,75,0,-3,75,-5,75,-11,78,-12,75,75,75,75,75,-1,75,75,75,75,75,75,75,75,75,75,75,75,-29,75,75,75],
sm35=[0,-2,75,-1,0,-2,75,75,0,-3,75,-5,75,-24,75,75,75,75,75,-1,75,75,75,75,75,75,75,75,75,75,75,75,-29,75,75,75],
sm36=[0,-2,75,-1,0,-2,75,75,0,-3,75,-5,75,-11,79,-12,75,75,75,75,75,-1,75,75,75,75,75,75,75,75,75,75,75,75,-29,75,75,75],
sm37=[0,-4,0,-4,0,-9,80,-35,66,67,68,69,70,71,72],
sm38=[0,-4,0,-4,0,-9,81,-35,81,81,81,81,81,81,81],
sm39=[0,-4,0,-4,0,-9,81,-11,82,-23,81,81,81,81,81,81,81],
sm40=[0,-4,0,-4,0,-9,81,-11,83,-23,81,81,81,81,81,81,81],
sm41=[0,-4,0,-4,0,-9,81,-11,84,-23,81,81,81,81,81,81,81],
sm42=[0,-4,0,-4,0,-9,81,-11,85,-23,81,81,81,81,81,81,81],
sm43=[0,86,-1,86,-1,86,86,86,86,86,86,-3,86,-2,41,-1,86,-3,86],
sm44=[0,87,-1,87,-1,87,87,87,87,87,87,-3,87,-4,87,-3,87],
sm45=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-1,88,-1,89,-4,10],
sm46=[0,-4,0,-4,0,-9,90,-30,29,30,31,32,33],
sm47=[0,-4,0,-4,0,-9,91],
sm48=[0,-4,0,-4,0,-9,92],
sm49=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,93,-10,93,-1,93,93,93,93,-14,93,93,93,93,93,-38,34],
sm50=[0,-4,0,-4,0,-9,94,-9,50,94,-1,94,94,94,94,-14,94,94,94,94,94],
sm51=[0,-4,0,-4,0,-9,95,-9,50,95,-1,95,95,95,95,-14,95,95,95,95,95],
sm52=[0,-2,96,-1,0,-2,96,96,0,-3,96,-5,96,-10,96,-1,96,96,96,96,-14,96,96,96,96,96,-38,96],
sm53=[0,-2,97,-1,0,-2,97,97,0,-3,97,-5,97,-10,97,-1,97,97,97,97,-14,97,97,97,97,97,-38,97],
sm54=[0,-2,98,-1,0,-2,98,98,0,-3,98,-1,98,-3,98,-9,98,98,-1,98,98,98,98,98,98,98,98,98,98,98,98,-5,98,98,98,98,98,98,-7,98,98,98,98,98,-1,98,-1,98,98,-1,98,-5,98,98,98,98,98,98,98,98,98,98,98,98,-2,98],
sm55=[0,-2,18,-1,56,-2,19,20,0,-3,21,-1,99,-3,99,-2,58,-6,99,99,-1,99,99,99,99,99,99,99,99,99,99,99,99,-5,99,99,99,99,99,99,-7,99,99,99,99,99,-1,99,-1,99,99,-1,99,99,99,99,99,-1,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],
sm56=[0,-2,100,-1,100,-2,100,100,0,-3,100,-1,100,-3,100,-2,100,-6,100,100,-1,100,100,100,100,100,100,100,100,100,100,100,100,-5,100,100,100,100,100,100,-7,100,100,100,100,100,-1,100,-1,100,100,-1,100,100,100,100,100,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
sm57=[0,-2,101,-1,101,-2,101,101,0,-3,101,-1,101,-3,101,-2,101,-6,101,101,-1,101,101,101,101,101,101,101,101,101,101,101,101,-5,101,101,101,101,101,101,-7,101,101,101,101,101,-1,101,-1,101,101,-1,101,101,101,101,101,-1,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101],
sm58=[0,-2,18,-1,0,-2,19,20,0,-3,21],
sm59=[0,-4,0,-4,0,-9,102,-30,102,102,102,102,102],
sm60=[0,-4,0,-4,0,-9,103,-16,104,105,106,107,-9,103,103,103,103,103,103],
sm61=[0,-4,0,-4,0,-9,108,-16,108,108,108,108,109,110,111,112,-5,108,108,108,108,108,108],
sm62=[0,-4,0,-4,0,-9,113,-16,113,113,113,113,113,113,113,113,-5,113,113,113,113,113,113],
sm63=[0,-2,18,-1,0,-2,19,20,0,-3,21,-34,65,-6,66,67,68,69,70,71,72,-29,73,74,34],
sm64=[0,-2,18,-1,0,-2,19,20,0,-3,21,-30,61,62,63,64,65,-6,66,67,68,69,70,71,72,-29,73,74,34],
sm65=[0,-4,0,-4,0,-9,114,-16,114,114,114,114,114,114,114,114,-5,114,114,114,114,114,114],
sm66=[0,-4,0,-4,0,-9,115,-16,115,115,115,115,115,115,115,115,-5,115,115,115,115,115,115],
sm67=[0,-4,0,-4,0,-5,116,-3,116,-16,116,116,116,116,116,116,116,116,-5,116,116,116,116,116,116],
sm68=[0,-4,0,-4,0,-5,117,-3,117,-16,117,117,117,117,117,117,117,117,-5,117,117,117,117,117,117,-7,118,119,120,121,122,-1,123,-1,124,125,-1,126,-5,127,128,129,130,131,132,133,134,135,136,137,138],
sm69=[0,-4,0,-4,0,-5,139,-3,139,-16,139,139,139,139,139,139,139,139,-5,139,139,139,139,139,139,-7,139,139,139,139,139,-1,139,-1,139,139,-1,139,-5,139,139,139,139,139,139,139,139,139,139,139,139],
sm70=[0,-4,0,-4,0,-5,140,-3,140,-16,140,140,140,140,140,140,140,140,-5,140,140,140,140,140,140,-7,118,119,120,121,122,-1,123,-1,124,125,-1,126,-5,127,128,129,130,131,132,133,134,135,136,137,138],
sm71=[0,-4,0,-4,0,-5,141,-3,141,-16,141,141,141,141,141,141,141,141,-5,141,141,141,141,141,141,-7,141,141,141,141,141,-1,141,-1,141,141,-1,141,-5,141,141,141,141,141,141,141,141,141,141,141,141],
sm72=[0,-4,0,-4,0,-52,118,119,120,121,122,-1,142,-1,143,125,-1,126,-5,127,128],
sm73=[0,-4,0,-4,0,-52,144,144,144,144,144,-1,144,-1,144,144,-1,144,-5,144,144],
sm74=[0,-2,18,-1,0,-2,19,20,0,-3,21,-79,34],
sm75=[0,-2,145,-1,0,-2,145,145,0,-3,145,-5,145,-24,145,145,145,145,145,-1,145,145,145,145,145,145,145,145,145,145,145,145,-29,145,145,145],
sm76=[0,-4,0,-4,0,-5,146,-3,147],
sm77=[0,-4,0,-4,0,-5,148,-3,148],
sm78=[0,-4,0,-4,0,-9,149,-35,149,149,149,149,149,149,149],
sm79=[0,150,-1,150,-1,150,150,150,150,150,150,-3,150,-4,150,-3,150],
sm80=[0,-4,0,-4,0,-5,151,-1,152],
sm81=[0,153,-1,153,-1,153,153,153,153,153,153,-3,153,-4,153,-3,153],
sm82=[0,-4,0,-4,0,-5,154,-1,154],
sm83=[0,-4,0,-4,0,-5,155,-1,155],
sm84=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-1,156,-1,156,-4,10],
sm85=[0,-2,157,-1,157,157,157,157,157,157,-3,157,-1,157,-1,157,-4,157],
sm86=[0,-4,0,-4,0,-9,158],
sm87=[0,-4,0,-4,0,-9,159,-9,50,159,-1,159,159,159,159,-14,159,159,159,159,159],
sm88=[0,-2,160,-1,160,-2,160,160,0,-3,160,-1,160,-3,160,-2,160,-6,160,160,-1,160,160,160,160,160,160,160,160,160,160,160,160,-5,160,160,160,160,160,160,-7,160,160,160,160,160,-1,160,-1,160,160,-1,160,160,160,160,160,-1,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160],
sm89=[0,-2,161,-1,161,-2,161,161,0,-3,161,-1,161,-3,161,-2,161,-6,161,161,-1,161,161,161,161,161,161,161,161,161,161,161,161,-5,161,161,161,161,161,161,-7,161,161,161,161,161,-1,161,-1,161,161,-1,161,161,161,161,161,-1,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161],
sm90=[0,-4,0,-4,0,-9,162,-16,162,162,162,162,162,162,162,162,-5,162,162,162,162,162,162],
sm91=[0,-4,0,-4,0,-39,163],
sm92=[0,-4,0,-4,0,-39,164],
sm93=[0,-4,0,-4,0,-81,165],
sm94=[0,-4,0,-4,0,-82,166],
sm95=[0,-4,0,-4,0,-5,167,-3,167,-16,167,167,167,167,167,167,167,167,-5,167,167,167,167,167,167,-13,168,-1,169,-10,129,130,131,132,133,134,135,136,137,138],
sm96=[0,-4,0,-4,0,-5,170,-3,170,-16,170,170,170,170,170,170,170,170,-5,170,170,170,170,170,170],
sm97=[0,-1,171,18,-1,0,-2,19,20,0,-3,21,-79,34],
sm98=[0,-1,172,-2,0,-4,0],
sm99=[0,-1,173,-2,0,-4,0],
sm100=[0,-1,174,174,-1,0,-2,174,174,0,-3,174,-52,175,-2,176,-3,126,-5,127,128,-12,174],
sm101=[0,-4,0,-4,0,-5,177,-3,177,-16,177,177,177,177,177,177,177,177,-5,177,177,177,177,177,177,-13,177,-1,177,-10,177,177,177,177,177,177,177,177,177,177],
sm102=[0,-1,174,174,-1,0,-2,174,174,0,-3,174,-79,174],
sm103=[0,-4,0,-4,0,-52,178],
sm104=[0,-1,179,-2,0,-4,0,-5,180,-3,180,-16,180,180,180,180,180,180,180,180,-5,180,180,180,180,180,180],
sm105=[0,-1,179,-2,0,-4,0],
sm106=[0,-1,181,-2,0,-4,0,-5,182,-3,182,-16,182,182,182,182,182,182,182,182,-5,182,182,182,182,182,182],
sm107=[0,-1,181,-2,0,-4,0],
sm108=[0,-1,183,-2,0,-4,0],
sm109=[0,-1,184,-2,0,-4,0],
sm110=[0,-1,185,18,-1,0,-2,19,20,0,-3,21],
sm111=[0,-1,186,186,-1,0,-2,186,186,0,-3,186],
sm112=[0,-4,0,-4,0,-5,187,-3,187,-16,187,187,187,187,187,187,187,187,-5,187,187,187,187,187,187],
sm113=[0,-4,0,-4,0,-5,188,-3,188,-16,188,188,188,188,188,188,188,188,-5,188,188,188,188,188,188],
sm114=[0,-4,0,-4,0,-5,180,-3,180,-16,180,180,180,180,180,180,180,180,-5,180,180,180,180,180,180],
sm115=[0,-4,0,-4,0,-5,182,-3,182,-16,182,182,182,182,182,182,182,182,-5,182,182,182,182,182,182],
sm116=[0,-4,0,-4,0,-5,189,-3,189,-16,189,189,189,189,189,189,189,189,-5,189,189,189,189,189,189,-13,168,-1,169,-10,129,130,131,132,133,134,135,136,137,138],
sm117=[0,-4,0,-4,0,-5,190,-3,190,-16,190,190,190,190,190,190,190,190,-5,190,190,190,190,190,190],
sm118=[0,-4,0,-4,0,-5,191,-3,191,-16,191,191,191,191,191,191,191,191,-5,191,191,191,191,191,191,-13,168,-1,169,-10,129,130,131,132,133,134,135,136,137,138],
sm119=[0,-4,0,-4,0,-5,192,-3,192,-16,192,192,192,192,192,192,192,192,-5,192,192,192,192,192,192,-7,118,119,120,121,122,-1,123,-1,124,125,-1,126,-5,127,128,129,130,131,132,133,134,135,136,137,138],
sm120=[0,-4,0,-4,0,-45,66,67,68,69,70,71,72],
sm121=[0,193,-1,193,-1,193,193,193,193,193,193,-3,193,-4,193,-3,193],
sm122=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-1,88,-1,88,-4,10],
sm123=[0,-2,194,-1,194,194,194,194,194,194,-3,194,-1,194,-1,194,-4,194],
sm124=[0,-4,0,-4,0,-9,195,-29,195,195,195,195,195,195],
sm125=[0,-4,0,-4,0,-9,196,-16,196,196,196,196,-9,196,196,196,196,196,196],
sm126=[0,-4,0,-4,0,-9,197,-16,197,197,197,197,197,197,197,197,-5,197,197,197,197,197,197],
sm127=[0,-4,0,-4,0,-9,198,-16,198,198,198,198,198,198,198,198,-5,198,198,198,198,198,198],
sm128=[0,-4,0,-4,0,-5,199,-3,199,-16,199,199,199,199,199,199,199,199,-5,199,199,199,199,199,199],
sm129=[0,-4,0,-4,0,-5,200,-3,200,-16,200,200,200,200,200,200,200,200,-5,200,200,200,200,200,200,-13,200,-1,200,-10,200,200,200,200,200,200,200,200,200,200],
sm130=[0,-4,0,-4,0,-5,201,-3,201,-16,201,201,201,201,201,201,201,201,-5,201,201,201,201,201,201,-13,201,-1,201,-10,201,201,201,201,201,201,201,201,201,201],
sm131=[0,-4,0,-4,0,-5,202,-3,202,-16,202,202,202,202,202,202,202,202,-5,202,202,202,202,202,202,-13,202,-1,202,-10,202,202,202,202,202,202,202,202,202,202],
sm132=[0,-4,0,-4,0,-5,203,-3,203,-16,203,203,203,203,203,203,203,203,-5,203,203,203,203,203,203,-13,203,-1,203,-10,203,203,203,203,203,203,203,203,203,203],
sm133=[0,-4,0,-4,0,-5,204,-3,204,-16,204,204,204,204,204,204,204,204,-5,204,204,204,204,204,204,-13,204,-1,204,-10,204,204,204,204,204,204,204,204,204,204],
sm134=[0,-1,205,-2,0,-4,0,-57,206],
sm135=[0,-1,207,-2,0,-4,0,-57,208],
sm136=[0,-1,209,209,-1,0,-2,209,209,0,-3,209,-79,209],
sm137=[0,-4,0,-4,0,-5,210,-3,210,-16,210,210,210,210,210,210,210,210,-5,210,210,210,210,210,210,-13,210,-1,210,-3,211,212,213,214,215,-2,210,210,210,210,210,210,210,210,210,210],
sm138=[0,-4,0,-4,0,-5,216,-3,216,-16,216,216,216,216,216,216,216,216,-5,216,216,216,216,216,216,-13,216,-1,216,-3,217,218,219,220,-3,216,216,216,216,216,216,216,216,216,216],
sm139=[0,-4,0,-4,0,-5,221,-3,221,-16,221,221,221,221,221,221,221,221,-5,221,221,221,221,221,221,-13,221,-1,221,-3,221,221,221,221,-3,221,221,221,221,221,221,221,221,221,221],
sm140=[0,-4,0,-4,0,-5,222,-3,222,-16,222,222,222,222,222,222,222,222,-5,222,222,222,222,222,222],
sm141=[0,-4,0,-4,0,-5,223,-3,223,-16,223,223,223,223,223,223,223,223,-5,223,223,223,223,223,223],
sm142=[0,-4,0,-4,0,-5,224,-3,224,-16,224,224,224,224,224,224,224,224,-5,224,224,224,224,224,224,-13,168,-1,169,-10,129,130,131,132,133,134,135,136,137,138],
sm143=[0,-4,0,-4,0,-5,225,-3,225,-16,225,225,225,225,225,225,225,225,-5,225,225,225,225,225,225],
sm144=[0,-4,0,-4,0,-5,226,-3,226],
sm145=[0,-4,0,-4,0,-5,227,-1,227],
sm146=[0,-1,228,-2,0,-4,0],
sm147=[0,-1,229,-2,0,-4,0],
sm148=[0,-4,0,-4,0,-5,230,-3,230,-16,230,230,230,230,230,230,230,230,-5,230,230,230,230,230,230,-13,230,-1,230,-10,230,230,230,230,230,230,230,230,230,230],
sm149=[0,-1,231,-2,0,-4,0],
sm150=[0,-1,232,-2,0,-4,0],
sm151=[0,-4,0,-4,0,-5,233,-3,233,-16,233,233,233,233,233,233,233,233,-5,233,233,233,233,233,233,-13,233,-1,233,-10,233,233,233,233,233,233,233,233,233,233],
sm152=[0,-1,234,234,-1,0,-2,234,234,0,-3,234],
sm153=[0,-4,0,-4,0,-5,235,-3,235,-16,235,235,235,235,235,235,235,235,-5,235,235,235,235,235,235],
sm154=[0,-4,0,-4,0,-5,236,-3,236,-16,236,236,236,236,236,236,236,236,-5,236,236,236,236,236,236,-13,236,-1,236,-10,236,236,236,236,236,236,236,236,236,236],
sm155=[0,-4,0,-4,0,-5,237,-3,237,-16,237,237,237,237,237,237,237,237,-5,237,237,237,237,237,237,-13,237,-1,237,-10,237,237,237,237,237,237,237,237,237,237],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],[201,14],[",",15],["[",16],["]",17],["((",18],["))",19],[null,1],["\\",22],["/",29],["?",30],[":",31],["f",32],["filter",33],["Filter",34],["FILTER",35],["&&",36],["AND",37],["And",38],["and",39],["||",40],["OR",41],["Or",42],["or",43],["NOT",44],["Not",45],["not",46],["!",47],["(",48],[")",49],["|",50],["s",51],["sort",52],["SORT",53],["Sort",54],["created",55],["CREATED",56],["modifier",57],["MODIFIED",58],["size",59],["SIZE",60],["#",61],["is",62],["equals",63],["=",64],["that",65],["greater",66],["than",67],[">",68],["less",69],["<",70],["lesser",71],["from",73],["to",74],["-",75],["TO",76],["To",77],["through",78],["on",79],["date",80],["DES",81],["des",82],["descending",83],["DESCENDING",84],["down",85],["ASC",86],["asc",87],["ascending",88],["ASCENDING",89],["up",90],["\"",91],["'",92],["*",93]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,201],[15,","],[16,"["],[17,"]"],[18,"(("],[19,"))"],[1,null],[22,"\\"],[29,"/"],[30,"?"],[31,":"],[32,"f"],[33,"filter"],[34,"Filter"],[35,"FILTER"],[36,"&&"],[37,"AND"],[38,"And"],[39,"and"],[40,"||"],[41,"OR"],[42,"Or"],[43,"or"],[44,"NOT"],[45,"Not"],[46,"not"],[47,"!"],[48,"("],[49,")"],[50,"|"],[51,"s"],[52,"sort"],[53,"SORT"],[54,"Sort"],[55,"created"],[56,"CREATED"],[57,"modifier"],[58,"MODIFIED"],[59,"size"],[60,"SIZE"],[61,"#"],[62,"is"],[63,"equals"],[64,"="],[65,"that"],[66,"greater"],[67,"than"],[68,">"],[69,"less"],[70,"<"],[71,"lesser"],[73,"from"],[74,"to"],[75,"-"],[76,"TO"],[77,"To"],[78,"through"],[79,"on"],[80,"date"],[81,"DES"],[82,"des"],[83,"descending"],[84,"DESCENDING"],[85,"down"],[86,"ASC"],[87,"asc"],[88,"ascending"],[89,"ASCENDING"],[90,"up"],[91,"\""],[92,"'"],[93,"*"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm3,
sm4,
sm5,
sm6,
sm6,
sm6,
sm6,
sm7,
sm7,
sm7,
sm7,
sm7,
sm7,
sm8,
sm9,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm18,
sm19,
sm20,
sm21,
sm22,
sm23,
sm24,
sm25,
sm26,
sm27,
sm27,
sm28,
sm29,
sm30,
sm30,
sm30,
sm30,
sm31,
sm32,
sm33,
sm34,
sm35,
sm36,
sm37,
sm38,
sm39,
sm40,
sm41,
sm42,
sm43,
sm44,
sm45,
sm46,
sm47,
sm48,
sm49,
sm50,
sm51,
sm52,
sm53,
sm54,
sm55,
sm56,
sm57,
sm57,
sm57,
sm58,
sm59,
sm60,
sm61,
sm62,
sm63,
sm63,
sm63,
sm63,
sm64,
sm65,
sm65,
sm66,
sm58,
sm58,
sm67,
sm67,
sm67,
sm67,
sm68,
sm69,
sm69,
sm70,
sm71,
sm71,
sm72,
sm73,
sm73,
sm74,
sm75,
sm75,
sm75,
sm75,
sm76,
sm77,
sm78,
sm78,
sm78,
sm78,
sm79,
sm80,
sm81,
sm82,
sm83,
sm84,
sm85,
sm86,
sm87,
sm88,
sm89,
sm64,
sm64,
sm64,
sm64,
sm64,
sm64,
sm64,
sm64,
sm90,
sm90,
sm90,
sm90,
sm91,
sm92,
sm93,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm100,
sm101,
sm101,
sm102,
sm102,
sm103,
sm104,
sm105,
sm106,
sm107,
sm108,
sm109,
sm110,
sm111,
sm111,
sm112,
sm113,
sm114,
sm114,
sm114,
sm114,
sm114,
sm115,
sm115,
sm115,
sm115,
sm115,
sm116,
sm117,
sm118,
sm105,
sm107,
sm119,
sm120,
sm121,
sm122,
sm123,
sm124,
sm124,
sm124,
sm124,
sm125,
sm125,
sm125,
sm125,
sm126,
sm127,
sm127,
sm128,
sm114,
sm115,
sm129,
sm130,
sm131,
sm132,
sm133,
sm133,
sm134,
sm135,
sm136,
sm137,
sm138,
sm139,
sm139,
sm140,
sm141,
sm142,
sm143,
sm144,
sm145,
sm146,
sm147,
sm148,
sm149,
sm150,
sm150,
sm150,
sm150,
sm150,
sm151,
sm110,
sm152,
sm152,
sm152,
sm152,
sm153,
sm154,
sm155],

/************ Functions *************/

    max = Math.max, min = Math.min,

    //Error Functions
    e = (tk,r,o,l,p)=>{if(l.END)l.throw("Unexpected end of input");else if(l.ty & (264)) l.throw(`Unexpected space character within input "${p.slice(l)}" `) ; else l.throw(`Unexpected token ${l.tx}" `)}, 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = fn(slice, e, l, s, o, plen);        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = new Fn(slice, e, l, s, o, plen);        return ret;    },
redn = (ret, plen, t, e, o) => {        if (plen > 0) {            let ln = max(o.length - plen, 0);            o[ln] = o[o.length - 1];            o.length = ln + 1;        }        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R10_string_data_list=sym=>(((sym[1] !== null) ? sym[0].push(sym[1]) : null,sym[0])),
R11_string_data_list=sym=>(sym[0] !== null) ? [sym[0]] : [],
R30_items=()=>[],
R31_items=sym=>[sym[0]],
R32_items=sym=>sym[0],
R33_items=sym=>((sym[0].push(sym[1]),sym[0])),
R40_data_string_list=sym=>(((sym[1] !== null) ? sym[0].push(sym[2]) : null,sym[0])),
R50_undefined621_group=sym=>sym[1],
R51_undefined621_group=()=>$sym2,
C60_data_insert_point=function (sym,env,lex){this.start = env.start;this.end = lex.off;this.value = sym[1];this.meta = sym[3];},
I61_data_insert_point=function (sym,env,lex){env.start = lex.off - 2;},
C62_data_insert_point=function (sym,env,lex){this.start = env.start;this.end = lex.off;this.value = null;this.meta = sym[2];},
C63_data_insert_point=function (sym,env,lex){this.start = env.start;this.end = lex.off;this.value = sym[1];this.meta = null;},
C64_data_insert_point=function (sym,env,lex){this.start = env.start;this.end = lex.off;this.value = null;this.meta = null;},
R70_string_data_val_list=sym=>sym[0] + sym[1],
R71_string_data_val_list=sym=>sym[0] + "",
C160_rnql_query_body=function (sym){this.container = sym[0];this.filter = sym[1];this.sort = sym[2];},
C161_rnql_query_body=function (sym){this.container = null;this.filter = sym[0];this.sort = sym[1];},
C162_rnql_query_body=function (sym){this.container = sym[0];this.filter = null;this.sort = sym[1];},
C163_rnql_query_body=function (sym){this.container = sym[0];this.filter = sym[1];this.sort = null;},
C164_rnql_query_body=function (sym){this.container = null;this.filter = null;this.sort = sym[0];},
C165_rnql_query_body=function (sym){this.container = null;this.filter = sym[0];this.sort = null;},
C166_rnql_query_body=function (sym){this.container = sym[0];this.filter = null;this.sort = null;},
C167_rnql_query_body=function (){this.container = null;this.filter = null;this.sort = null;},
C180_rnql_container_clause=function (sym){this.containers = [{ids : [""]},...sym[1]];this.id = sym[2];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C181_rnql_container_clause=function (sym){this.containers = [{ids : [""]},...sym[0]];this.id = sym[1];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C182_rnql_container_clause=function (sym){this.containers = [{ids : [""]}];this.id = sym[1];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C183_rnql_container_clause=function (sym){this.containers = [{ids : [""]},...sym[1]];this.id = null;if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C184_rnql_container_clause=function (sym){this.containers = [{ids : [""]}];this.id = sym[0];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C185_rnql_container_clause=function (sym){this.containers = [{ids : [""]},...sym[0]];this.id = null;if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C186_rnql_container_clause=function (){this.containers = [{ids : [""]}];this.id = null;if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
R210_rnql_filter_clause=()=>null,
C230_rnql_and_expression=function (sym){this.type = "AND";this.left = sym[0];this.right = sym[2];},
C240_rnql_or_expression=function (sym){this.type = "OR";this.left = sym[0];this.right = sym[2];},
C250_rnql_not_expression=function (sym){this.type = "NOT";this.left = sym[1];},
C260_rnql_wrapped_expression=function (sym){this.type = "MATCH";this.value = sym[0];},
C320_rnql_created_statement=function (sym){this.type = "CREATED";this.val = sym[1];this.order = sym[2] || 1;},
C321_rnql_created_statement=function (sym){this.type = "CREATED";this.val = null;this.order = sym[1] || 1;},
C322_rnql_created_statement=function (sym){this.type = "CREATED";this.val = sym[1];this.order = 1;},
C323_rnql_created_statement=function (){this.type = "CREATED";this.val = null;this.order = 1;},
C340_rnql_modified_statement=function (sym){this.type = "MODIFIED";this.val = sym[1];this.order = sym[2] || 1;},
C341_rnql_modified_statement=function (sym){this.type = "MODIFIED";this.val = null;this.order = sym[1] || 1;},
C342_rnql_modified_statement=function (sym){this.type = "MODIFIED";this.val = sym[1];this.order = 1;},
C343_rnql_modified_statement=function (){this.type = "MODIFIED";this.val = null;this.order = 1;},
C360_rnql_size_statement=function (sym){this.type = "SIZE";this.val = sym[1];this.order = sym[2] || 1;},
C361_rnql_size_statement=function (sym){this.type = "SIZE";this.val = sym[1];this.order = 1;},
C370_rnql_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = sym[2];this.order = sym[3] || 1;},
C371_rnql_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = null;this.order = sym[2] || 1;},
C372_rnql_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = sym[2];this.order = 1;},
C373_rnql_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = null;this.order = 1;},
R410_rnql_comparison_expression=sym=>{type : "EQUALS_QUANTITATIVE",val : parseFloat(sym[1])},
R411_rnql_comparison_expression=sym=>{type : "EQUALS_QUALITATIVE",val : sym[1]},
R412_rnql_comparison_expression=sym=>{type : "GREATERTHAN",val : parseFloat(sym[1])},
R413_rnql_comparison_expression=sym=>{type : "LESSTHAN",val : parseFloat(sym[1])},
R450_rnql_range_expression=sym=>{type : "RANGE",val : [sym[1],sym[2]].map(parseFloat).sort((a,b)=>a < b ? -1 : 1)},
R451_rnql_range_expression=sym=>{type : "RANGE",val : [sym[1]].map(parseFloat).sort((a,b)=>a < b ? -1 : 1)},
R500_rnql_date_expression=sym=>{type : "DATE",val : [sym[1],sym[2]].map(d=>new Date(d).valueOf()).sort((a,b)=>a < b ? -1 : 1)},
R501_rnql_date_expression=sym=>{type : "DATE",val : [sym[1]].map(d=>new Date(d).valueOf()).sort((a,b)=>a < b ? -1 : 1)},
R530_rnql_order=()=>-1,
R531_rnql_order=()=>1,
C550_rnql_identifier=function (sym){this.ids = sym[0];},
R590_rnql_string_data=sym=>[sym[0],...sym[1]].join("").trim(),
R591_rnql_string_data=sym=>[sym[0]].join("").trim(),

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index + 1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [e=>42,
e=>34,
e=>62,
e=>58,
e=>54,
e=>50,
e=>38,
e=>46,
(...v)=>shftf(70,I61_data_insert_point,...v),
e=>66,
(...v)=>redn(5,1,...v),
(...v)=>redv(3079,R30_items,1,0,...v),
(...v)=>redv(3079,R31_items,1,0,...v),
(...v)=>redv(2055,R11_string_data_list,1,0,...v),
(...v)=>redn(10247,1,...v),
(...v)=>redn(11271,1,...v),
(...v)=>redn(13319,1,...v),
e=>170,
e=>166,
e=>162,
e=>158,
e=>94,
e=>118,
e=>178,
e=>182,
e=>186,
e=>190,
e=>194,
e=>202,
e=>206,
e=>210,
e=>214,
e=>218,
e=>150,
(...v)=>redv(3083,R32_items,2,0,...v),
(...v)=>redv(3083,R33_items,2,0,...v),
(...v)=>redv(2059,R10_string_data_list,2,0,...v),
(...v)=>redv(12299,R50_undefined621_group,2,0,...v),
e=>222,
(...v)=>rednv(6155,C64_data_insert_point,2,0,...v),
e=>230,
(...v)=>redn(14343,1,...v),
(...v)=>redn(15367,1,...v),
(...v)=>rednv(16391,C166_rnql_query_body,1,0,...v),
(...v)=>rednv(16391,C165_rnql_query_body,1,0,...v),
(...v)=>rednv(16391,C164_rnql_query_body,1,0,...v),
(...v)=>rednv(18439,C186_rnql_container_clause,1,0,...v),
(...v)=>rednv(18439,C185_rnql_container_clause,1,0,...v),
(...v)=>rednv(18439,C184_rnql_container_clause,1,0,...v),
e=>262,
(...v)=>redv(17415,R11_string_data_list,1,0,...v),
(...v)=>rednv(56327,C550_rnql_identifier,1,0,...v),
(...v)=>redv(55303,R11_string_data_list,1,0,...v),
(...v)=>redn(57351,1,...v),
(...v)=>redn(61447,1,...v),
e=>286,
(...v)=>redv(60423,R591_rnql_string_data,1,0,...v),
e=>290,
(...v)=>redn(64519,1,...v),
(...v)=>redv(21511,R210_rnql_filter_clause,1,0,...v),
e=>310,
e=>314,
e=>318,
e=>322,
e=>326,
e=>370,
e=>374,
e=>382,
e=>386,
e=>394,
e=>398,
e=>402,
e=>342,
e=>346,
(...v)=>redn(20487,1,...v),
e=>406,
e=>410,
e=>414,
e=>418,
(...v)=>redv(29703,R210_rnql_filter_clause,1,0,...v),
(...v)=>redn(27655,1,...v),
e=>430,
e=>434,
e=>438,
e=>442,
(...v)=>rednv(6159,C63_data_insert_point,3,0,...v),
(...v)=>rednv(6159,C62_data_insert_point,3,0,...v),
(...v)=>(redn(8195,0,...v)),
e=>454,
(...v)=>rednv(16395,C163_rnql_query_body,2,0,...v),
(...v)=>rednv(16395,C162_rnql_query_body,2,0,...v),
(...v)=>rednv(16395,C161_rnql_query_body,2,0,...v),
(...v)=>rednv(18443,C183_rnql_container_clause,2,0,...v),
(...v)=>rednv(18443,C182_rnql_container_clause,2,0,...v),
(...v)=>rednv(18443,C181_rnql_container_clause,2,0,...v),
(...v)=>redv(17419,R10_string_data_list,2,0,...v),
(...v)=>redv(19467,R32_items,2,0,...v),
(...v)=>redv(55307,R10_string_data_list,2,0,...v),
(...v)=>redv(60427,R590_rnql_string_data,2,0,...v),
(...v)=>redv(59399,R71_string_data_val_list,1,0,...v),
(...v)=>redn(62471,1,...v),
(...v)=>redv(21515,R50_undefined621_group,2,0,...v),
(...v)=>redn(23559,1,...v),
e=>490,
e=>494,
e=>498,
e=>502,
(...v)=>redn(24583,1,...v),
e=>506,
e=>510,
e=>514,
e=>518,
(...v)=>redn(25607,1,...v),
(...v)=>rednv(26631,C260_rnql_wrapped_expression,1,0,...v),
(...v)=>redn(26631,1,...v),
(...v)=>redn(30727,1,...v),
(...v)=>rednv(32775,C323_rnql_created_statement,1,0,...v),
e=>574,
e=>586,
e=>590,
e=>594,
e=>602,
e=>598,
e=>606,
e=>610,
e=>618,
e=>626,
e=>630,
e=>642,
e=>646,
e=>650,
e=>654,
e=>658,
e=>662,
e=>666,
e=>670,
e=>674,
e=>678,
(...v)=>redn(31751,1,...v),
(...v)=>rednv(34823,C343_rnql_modified_statement,1,0,...v),
(...v)=>redn(33799,1,...v),
e=>694,
e=>698,
(...v)=>redn(35847,1,...v),
(...v)=>redn(20491,2,...v),
e=>706,
(...v)=>redv(29707,R50_undefined621_group,2,0,...v),
(...v)=>redv(28679,R11_string_data_list,1,0,...v),
(...v)=>redn(27659,2,...v),
(...v)=>rednv(6163,C60_data_insert_point,4,0,...v),
e=>714,
e=>710,
(...v)=>redv(5131,R51_undefined621_group,2,0,...v),
(...v)=>redv(4103,R11_string_data_list,1,0,...v),
(...v)=>redn(9223,1,...v),
(...v)=>redn(8199,1,...v),
(...v)=>redv(7175,R71_string_data_val_list,1,0,...v),
(...v)=>rednv(16399,C160_rnql_query_body,3,0,...v),
(...v)=>rednv(18447,C180_rnql_container_clause,3,0,...v),
(...v)=>redv(59403,R70_string_data_val_list,2,0,...v),
(...v)=>redv(63499,R50_undefined621_group,2,0,...v),
(...v)=>rednv(25611,C250_rnql_not_expression,2,0,...v),
e=>754,
(...v)=>redn(22535,1,...v),
e=>758,
e=>762,
(...v)=>rednv(32779,C322_rnql_created_statement,2,0,...v),
e=>770,
e=>774,
(...v)=>rednv(32779,C321_rnql_created_statement,2,0,...v),
e=>778,
e=>786,
e=>790,
(...v)=>redn(38919,1,...v),
e=>802,
e=>806,
(...v)=>redv(41991,R32_items,1,0,...v),
e=>810,
(...v)=>redn(39943,1,...v),
(...v)=>redn(52231,1,...v),
(...v)=>redn(40967,1,...v),
(...v)=>redn(53255,1,...v),
e=>814,
(...v)=>redn(43015,1,...v),
e=>826,
(...v)=>redn(47111,1,...v),
(...v)=>redv(54279,R530_rnql_order,1,0,...v),
(...v)=>redv(54279,R531_rnql_order,1,0,...v),
(...v)=>rednv(34827,C342_rnql_modified_statement,2,0,...v),
(...v)=>rednv(34827,C341_rnql_modified_statement,2,0,...v),
(...v)=>rednv(36875,C361_rnql_size_statement,2,0,...v),
(...v)=>rednv(37899,C373_rnql_tag_statement,2,0,...v),
(...v)=>redv(5135,R50_undefined621_group,3,0,...v),
(...v)=>redv(7179,R70_string_data_val_list,2,0,...v),
(...v)=>rednv(23567,C230_rnql_and_expression,3,0,...v),
(...v)=>rednv(24591,C240_rnql_or_expression,3,0,...v),
(...v)=>redv(26639,R50_undefined621_group,3,0,...v),
(...v)=>redv(58383,R50_undefined621_group,3,0,...v),
(...v)=>rednv(32783,C320_rnql_created_statement,3,0,...v),
(...v)=>redv(41995,R410_rnql_comparison_expression,2,0,...v),
(...v)=>redv(41995,R411_rnql_comparison_expression,2,0,...v),
(...v)=>redv(41995,R412_rnql_comparison_expression,2,0,...v),
(...v)=>redv(41995,R413_rnql_comparison_expression,2,0,...v),
(...v)=>redv(41995,R50_undefined621_group,2,0,...v),
(...v)=>redn(39947,2,...v),
e=>854,
(...v)=>redn(40971,2,...v),
e=>858,
(...v)=>redn(38923,2,...v),
(...v)=>redv(46091,R451_rnql_range_expression,2,0,...v),
e=>870,
e=>874,
e=>878,
e=>882,
e=>886,
(...v)=>redv(51211,R501_rnql_date_expression,2,0,...v),
e=>898,
e=>902,
e=>906,
e=>910,
(...v)=>redn(48135,1,...v),
(...v)=>rednv(34831,C340_rnql_modified_statement,3,0,...v),
(...v)=>rednv(36879,C360_rnql_size_statement,3,0,...v),
(...v)=>rednv(37903,C372_rnql_tag_statement,3,0,...v),
(...v)=>rednv(37903,C371_rnql_tag_statement,3,0,...v),
(...v)=>redv(28687,R40_data_string_list,3,0,...v),
(...v)=>redv(4111,R40_data_string_list,3,0,...v),
(...v)=>redn(39951,3,...v),
(...v)=>redn(40975,3,...v),
(...v)=>redv(46095,R450_rnql_range_expression,3,0,...v),
e=>918,
(...v)=>redn(44039,1,...v),
(...v)=>redv(51215,R500_rnql_date_expression,3,0,...v),
(...v)=>redn(49159,1,...v),
(...v)=>rednv(37907,C370_rnql_tag_statement,4,0,...v),
(...v)=>redv(45067,R50_undefined621_group,2,0,...v),
(...v)=>redv(50187,R50_undefined621_group,2,0,...v)],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
v=>lsm(v,gt1),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt3),
v=>lsm(v,gt4),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
v=>lsm(v,gt5),
nf,
nf,
v=>lsm(v,gt6),
v=>lsm(v,gt7),
nf,
v=>lsm(v,gt8),
v=>lsm(v,gt9),
nf,
nf,
v=>lsm(v,gt10),
nf,
nf,
nf,
nf,
v=>lsm(v,gt11),
nf,
nf,
nf,
nf,
v=>lsm(v,gt12),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt13),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt14),
nf,
v=>lsm(v,gt15),
v=>lsm(v,gt16),
nf,
nf,
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt18),
nf,
nf,
nf,
nf,
v=>lsm(v,gt19),
nf,
nf,
nf,
nf,
v=>lsm(v,gt20),
v=>lsm(v,gt21),
v=>lsm(v,gt22),
v=>lsm(v,gt23),
v=>lsm(v,gt24),
nf,
nf,
nf,
v=>lsm(v,gt25),
v=>lsm(v,gt26),
nf,
nf,
nf,
nf,
v=>lsm(v,gt27),
nf,
nf,
v=>lsm(v,gt28),
nf,
nf,
v=>lsm(v,gt29),
nf,
nf,
v=>lsm(v,gt30),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt31),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt32),
v=>lsm(v,gt33),
v=>lsm(v,gt34),
v=>lsm(v,gt35),
v=>lsm(v,gt36),
v=>lsm(v,gt37),
v=>lsm(v,gt38),
v=>lsm(v,gt39),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt40),
nf,
v=>lsm(v,gt41),
nf,
nf,
v=>lsm(v,gt42),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt43),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt44),
nf,
v=>lsm(v,gt45),
nf,
nf,
v=>lsm(v,gt46),
v=>lsm(v,gt47),
nf,
v=>lsm(v,gt48),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt49),
v=>lsm(v,gt50),
nf,
nf,
nf,
nf,
v=>lsm(v,gt51),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt52),
nf,
nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*$eof*/

    switch (l.ty) {
        case 2:
            //*
            if (SYM_LU.has(l.tx)) return 14;
            /*/
                console.log(l.tx, SYM_LU.has(l.tx), SYM_LU.get(l.tx))
                if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            //*/
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {

    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const recovery_chain = [];

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        RESTARTED = true,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        reduceStack = (e.reduceStack = []),
        ROOT = 10000,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                tk = getToken(l.next(), lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {

                if (tk == 14) {
                    tk = lu.get(l.tx);
                    continue;
                }

                if (l.ty == 8 && l.tl > 1) {
                    // Make sure that special tokens are not getting in the way
                    l.tl = 0;
                    // This will skip the generation of a custom symbol
                    l.next(l, false);

                    if (l.tl == 1)
                        continue;
                }

                if (RECOVERING > 1 && !l.END) {

                    if (tk !== lu.get(l.ty)) {
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], (lex) => getToken(lex, lu));

                if (RECOVERING > 0 && recovery_token >= 0) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$eof")
                        l.throw("Unexpected end of input");

                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:

                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */
                    RESTARTED = true;

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    if (reduceStack.length > 0) {
                        let i = reduceStack.length - 1;
                        while (i > -1) {
                            let item = reduceStack[i--];

                            if (item.index == sp) {
                                item.action(output)
                            } else if (item.index > sp) {
                                reduceStack.length--;
                            } else {
                                break;
                            }
                        }
                    }

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;