#pragma once

#include <unordered_map>
#include <algorithm>
#include <cstring>
#include "./tokenizer.h"

namespace HC_TEMP
{
	using namespace std;

	typedef HC_Tokenizer::Token Token;
	typedef unordered_map<wstring, unsigned> SymbolLookup;
	typedef int(*StateAction)(Token&, unsigned, void **);
	typedef int(*ErrorAction)(Token&, unsigned, void **);

	void reduceToNull(int plen, int& output_offset, void ** output)
	{
		if (plen > 0) {
			auto ln = max(output_offset - plen + 1, 0);
			output[ln] = output[output_offset];
			output_offset = ln;
		}
	};
	int e(Token& tk, unsigned output_offset, void ** output)
	{
		return -1;
	};
	int emptyFunction(Token& tk, unsigned output_offset, void ** output)
	{
		return -1;
	};

	/************** Maps **************/
	const int
	gtd[] {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	    gt1[] {-1,1,2,3,7,9,19,4,-1,-1,-1,-1,-1,25,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,10,-1,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt2[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt3[] {-1,-1,-1,-1,-1,-1,19,31,-1,-1,-1,-1,-1,25,32,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt4[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt5[] {-1,-1,-1,-1,34,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,35,10,-1,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt6[] {-1,-1,-1,-1,-1,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,36,10,-1,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt7[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,39,-1,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt8[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,40,43,44,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt9[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,47,48,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt10[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,79,80,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt11[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt12[] {-1,-1,-1,-1,-1,37,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,86,10,-1,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt13[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,87,88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt14[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,89,43,44,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt15[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt16[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,99,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt17[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt18[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,101,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt19[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,102,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt20[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,103,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt21[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,104,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt22[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,105,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt23[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,108,109,110,106,121,-1,-1,112,123,-1,-1,-1,113,126,127,107,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt24[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,108,109,110,138,121,-1,-1,112,123,-1,-1,-1,113,126,127,139,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt25[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,108,109,110,140,121,-1,-1,112,123,-1,-1,-1,113,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt26[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,143,10,-1,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt27[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,87,88,145,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt28[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,146,48,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt29[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,147,48,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt30[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,148,48,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt31[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,149,48,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt32[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,150,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt33[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,151,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt34[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,152,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt35[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,153,49,50,-1,-1,-1,58,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,57,10,56,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt36[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,126,127,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt37[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,161,10,-1,12,11,-1,-1,-1,14,160,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt38[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,163,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt39[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,164,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt40[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,121,-1,-1,165,123,-1,-1,-1,166,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt41[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,170,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt42[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,171,-1,-1,-1,-1,-1,-1,-1,-1,-1,172,-1,-1,-1,-1,14,173,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt43[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,126,127,174,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt44[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,126,127,175,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt45[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,108,109,110,176,121,-1,-1,112,123,-1,-1,-1,113,126,127,177,-1,39,-1,12,11,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt46[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,178,65,61,68,62,71,63,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt47[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,182,181,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt48[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,189,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt49[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,126,127,194,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt50[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,195,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    gt51[] {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,196,-1,-1,-1,-1,-1,-1,-1,-1,-1,172,-1,-1,-1,-1,14,173,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm0[] {1,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,6,7,-1,8,9,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,13,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm1[] {18,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm2[] {19,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm3[] {20,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,7,-1,8,9,10,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,13,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm4[] {21,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,13,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm5[] {22,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm6[] {23,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,23,-1,23,23,23,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,23,23,23,23,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm7[] {24,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,24,-1,24,24,24,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,24,24,24,24,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm8[] {25,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,26,25,-1,25,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,25,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm9[] {27,-1,27,-1,0,-1,-1,27,27,0,-1,-1,-1,27,-1,-1,27,-1,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,27,27,27,27,27,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,27,-1,-1,-1},
	    sm10[] {28,-1,28,-1,0,-1,-1,28,28,0,-1,-1,-1,28,-1,28,28,-1,28,28,28,28,28,28,28,28,28,28,28,28,-1,-1,-1,-1,-1,28,28,28,28,28,28,28,-1,-1,-1,-1,-1,-1,-1,28,28,28,28,28,-1,28,-1,28,28,28,-1,-1,-1,-1,-1,28,28,28,28,28,28,28,28,28,28,28,28,-1,-1,28,-1,-1,-1},
	    sm11[] {29,-1,29,-1,0,-1,-1,29,29,0,-1,-1,-1,29,-1,29,29,-1,29,29,29,29,29,29,29,29,29,29,29,29,-1,-1,-1,-1,-1,29,29,29,29,29,29,29,-1,-1,-1,-1,-1,-1,-1,29,29,29,29,29,-1,29,-1,29,29,29,-1,-1,-1,-1,-1,29,29,29,29,29,29,29,29,29,29,29,29,-1,-1,29,-1,-1,-1},
	    sm12[] {30,-1,30,-1,0,-1,-1,30,30,0,-1,-1,-1,30,-1,30,30,-1,30,30,30,30,30,30,30,30,30,30,30,30,-1,-1,-1,-1,-1,30,30,30,30,30,30,30,-1,-1,-1,-1,-1,-1,-1,30,30,30,30,30,-1,30,-1,30,30,30,-1,-1,-1,-1,-1,30,30,30,30,30,30,30,30,30,30,30,30,-1,-1,30,-1,-1,-1},
	    sm13[] {31,-1,2,-1,32,-1,-1,3,4,0,-1,-1,-1,5,-1,31,31,-1,31,31,31,31,31,31,31,31,31,31,31,31,-1,-1,-1,-1,-1,31,31,31,31,31,31,31,-1,-1,-1,-1,-1,-1,-1,31,31,31,31,31,-1,31,-1,31,31,31,31,31,31,31,-1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,33,34,-1},
	    sm14[] {35,-1,35,-1,35,-1,-1,35,35,0,-1,-1,-1,35,-1,35,35,-1,35,35,35,35,35,35,35,35,35,35,35,35,-1,-1,-1,-1,-1,35,35,35,35,35,35,35,-1,-1,-1,-1,-1,-1,-1,35,35,35,35,35,-1,35,-1,35,35,35,35,35,35,35,-1,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-1},
	    sm15[] {36,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,37,38,39,40,41,-1,36,36,36,36,36,-1,42,43,44,45,46,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,49,50,17,-1,-1,-1},
	    sm16[] {51,-1,51,-1,0,-1,-1,51,51,0,-1,-1,-1,51,-1,-1,-1,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,51,51,-1,51,51,51,51,51,-1,51,51,51,51,51,51,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,-1,-1,-1},
	    sm17[] {51,-1,51,-1,0,-1,-1,51,51,0,-1,-1,-1,51,-1,-1,-1,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,51,51,-1,51,51,51,51,51,-1,51,51,51,51,51,51,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,-1,-1,-1},
	    sm18[] {51,-1,51,-1,0,-1,-1,51,51,0,-1,-1,-1,51,-1,-1,-1,54,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,51,51,-1,51,51,51,51,51,-1,51,51,51,51,51,51,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,-1,-1,-1},
	    sm19[] {51,-1,51,-1,0,-1,-1,51,51,0,-1,-1,-1,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,51,51,-1,51,51,51,51,51,-1,51,51,51,51,51,51,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,-1,-1,-1},
	    sm20[] {51,-1,51,-1,0,-1,-1,51,51,0,-1,-1,-1,51,-1,-1,-1,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,51,51,-1,51,51,51,51,51,-1,51,51,51,51,51,51,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,51,51,-1,-1,-1},
	    sm21[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,42,43,44,45,46,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm22[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,56,56,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm23[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,56,56,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm24[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,58,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,56,56,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm25[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,56,56,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm26[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,56,56,56,56,56,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm27[] {61,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,13,14,15,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm28[] {62,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm29[] {63,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm30[] {64,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,64,-1,64,64,64,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,64,64,64,64,64,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm31[] {65,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,26,65,-1,65,65,65,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,65,65,65,65,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm32[] {66,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,26,66,-1,66,66,66,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,66,66,66,66,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm33[] {67,-1,67,-1,0,-1,-1,67,67,0,-1,-1,-1,67,-1,-1,67,-1,67,67,67,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,67,67,67,67,67,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,-1},
	    sm34[] {68,-1,68,-1,0,-1,-1,68,68,0,-1,-1,-1,68,-1,-1,68,-1,68,68,68,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,68,68,68,68,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,68,-1,-1,-1},
	    sm35[] {69,-1,69,-1,0,-1,-1,69,69,0,-1,-1,-1,69,-1,69,69,-1,69,69,69,69,69,69,69,69,69,69,69,69,-1,-1,-1,-1,-1,69,69,69,69,69,69,69,-1,-1,-1,-1,-1,-1,-1,69,69,69,69,69,-1,69,-1,69,69,69,-1,-1,-1,-1,-1,69,69,69,69,69,69,69,69,69,69,69,69,-1,-1,69,-1,-1,-1},
	    sm36[] {70,-1,70,-1,32,-1,-1,70,70,0,-1,-1,-1,70,-1,70,70,-1,70,70,70,70,70,70,70,70,70,70,70,70,-1,-1,-1,-1,-1,70,70,70,70,70,70,70,-1,-1,-1,-1,-1,-1,-1,70,70,70,70,70,-1,70,-1,70,70,70,70,70,70,70,-1,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-1,34,-1},
	    sm37[] {-1,-1,2,-1,32,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,33,34,-1},
	    sm38[] {71,-1,71,-1,71,-1,-1,71,71,0,-1,-1,-1,71,-1,71,71,-1,71,71,71,71,71,71,71,71,71,71,71,71,-1,-1,-1,-1,-1,71,71,71,71,71,71,71,-1,-1,-1,-1,-1,-1,-1,71,71,71,71,71,-1,71,-1,71,71,71,71,71,71,71,-1,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-1,71,-1},
	    sm39[] {-1,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm40[] {72,-1,72,-1,72,-1,-1,72,72,0,-1,-1,-1,72,-1,72,72,-1,72,72,72,72,72,72,72,72,72,72,72,72,-1,-1,-1,-1,-1,72,72,72,72,72,72,72,-1,-1,-1,-1,-1,-1,-1,72,72,72,72,72,-1,72,-1,72,72,72,72,72,72,72,-1,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-1,72,-1},
	    sm41[] {73,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,73,73,73,73,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm42[] {74,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,76,77,78,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,74,74,74,74,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm43[] {79,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,79,79,79,79,80,81,82,83,-1,-1,-1,-1,-1,-1,79,79,79,79,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm44[] {84,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,84,84,84,84,84,84,84,84,-1,-1,-1,-1,-1,-1,84,84,84,84,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm45[] {-1,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,41,-1,-1,-1,-1,-1,-1,-1,42,43,44,45,46,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,49,50,17,-1,-1,-1},
	    sm46[] {85,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,85,85,85,85,85,85,85,85,-1,-1,-1,-1,-1,-1,85,85,85,85,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm47[] {85,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,85,85,85,85,85,85,85,85,-1,-1,-1,-1,-1,-1,85,85,85,85,85,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm48[] {86,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,86,86,86,86,86,86,86,86,-1,-1,-1,-1,-1,86,86,86,86,86,86,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm49[] {87,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,87,87,87,87,87,87,87,87,-1,-1,-1,-1,-1,87,87,87,87,87,87,87,-1,-1,-1,-1,-1,-1,-1,88,89,90,91,92,-1,93,-1,94,95,96,-1,-1,-1,-1,-1,97,98,99,100,101,102,103,104,105,106,107,108,-1,-1,-1,-1,-1,-1},
	    sm50[] {109,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,109,109,109,109,109,109,109,109,-1,-1,-1,-1,-1,109,109,109,109,109,109,109,-1,-1,-1,-1,-1,-1,-1,109,109,109,109,109,-1,109,-1,109,109,109,-1,-1,-1,-1,-1,109,109,109,109,109,109,109,109,109,109,109,109,-1,-1,-1,-1,-1,-1},
	    sm51[] {110,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,110,110,110,110,110,110,110,110,-1,-1,-1,-1,-1,110,110,110,110,110,110,110,-1,-1,-1,-1,-1,-1,-1,88,89,90,91,92,-1,93,-1,94,95,96,-1,-1,-1,-1,-1,97,98,99,100,101,102,103,104,105,106,107,108,-1,-1,-1,-1,-1,-1},
	    sm52[] {111,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,111,111,111,111,111,111,111,111,-1,-1,-1,-1,-1,111,111,111,111,111,111,111,-1,-1,-1,-1,-1,-1,-1,111,111,111,111,111,-1,111,-1,111,111,111,-1,-1,-1,-1,-1,111,111,111,111,111,111,111,111,111,111,111,111,-1,-1,-1,-1,-1,-1},
	    sm53[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,88,89,90,91,92,-1,112,-1,113,95,96,-1,-1,-1,-1,-1,97,98,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm54[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,114,114,114,114,114,-1,114,-1,114,114,114,-1,-1,-1,-1,-1,114,114,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm55[] {-1,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm56[] {115,-1,115,-1,0,-1,-1,115,115,0,-1,-1,-1,115,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,115,115,115,115,115,-1,115,115,115,115,115,-1,115,115,115,115,115,115,115,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,115,115,115,-1,-1,-1},
	    sm57[] {116,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm58[] {118,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,118,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm59[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,119,119,119,119,119,119,119,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm60[] {120,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm61[] {121,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,26,121,-1,121,121,121,121,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,121,121,121,121,121,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm62[] {122,-1,122,-1,122,-1,-1,122,122,0,-1,-1,-1,122,-1,122,122,-1,122,122,122,122,122,122,122,122,122,122,122,122,-1,-1,-1,-1,-1,122,122,122,122,122,122,122,-1,-1,-1,-1,-1,-1,-1,122,122,122,122,122,-1,122,-1,122,122,122,122,122,122,122,-1,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-1,122,-1},
	    sm63[] {-1,-1,2,-1,32,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,34,-1},
	    sm64[] {123,-1,123,-1,123,-1,-1,123,123,0,-1,-1,-1,123,-1,123,123,-1,123,123,123,123,123,123,123,123,123,123,123,123,-1,-1,-1,-1,-1,123,123,123,123,123,123,123,-1,-1,-1,-1,-1,-1,-1,123,123,123,123,123,-1,123,-1,123,123,123,123,123,123,123,-1,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-1,123,-1},
	    sm65[] {-1,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,37,38,39,40,41,-1,-1,-1,-1,-1,-1,-1,42,43,44,45,46,47,48,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,49,50,17,-1,-1,-1},
	    sm66[] {124,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,124,124,124,124,124,124,124,124,-1,-1,-1,-1,-1,-1,124,124,124,124,124,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm67[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,125,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm68[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,126,-1,-1,-1,-1,-1},
	    sm69[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,127,-1,-1,-1,-1},
	    sm70[] {128,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,128,128,128,128,128,128,128,128,-1,-1,-1,-1,-1,128,128,128,128,128,128,128,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,129,-1,130,-1,-1,-1,-1,-1,-1,-1,-1,-1,99,100,101,102,103,104,105,106,107,108,-1,-1,-1,-1,-1,-1},
	    sm71[] {131,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,131,131,131,131,131,131,131,131,-1,-1,-1,-1,-1,131,131,131,131,131,131,131,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm72[] {-1,132,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1},
	    sm73[] {-1,132,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm74[] {-1,133,133,-1,0,-1,-1,133,133,0,-1,-1,-1,133,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,134,-1,-1,135,-1,-1,96,-1,-1,-1,-1,-1,97,98,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,133,-1,-1,-1},
	    sm75[] {136,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,136,136,136,136,136,136,136,-1,-1,-1,-1,-1,136,136,136,136,136,136,136,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,-1,136,-1,-1,-1,-1,-1,-1,-1,-1,-1,136,136,136,136,136,136,136,136,136,136,-1,-1,-1,-1,-1,-1},
	    sm76[] {-1,133,133,-1,0,-1,-1,133,133,0,-1,-1,-1,133,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,133,-1,-1,-1},
	    sm77[] {-1,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,137,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm78[] {138,139,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,138,138,138,138,138,138,138,-1,-1,-1,-1,-1,138,138,138,138,138,138,138,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm79[] {-1,139,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm80[] {140,141,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,140,140,-1,-1,-1,-1,-1,140,140,140,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm81[] {-1,141,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm82[] {-1,142,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm83[] {-1,132,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm84[] {-1,143,143,-1,0,-1,-1,143,143,0,-1,-1,-1,143,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm85[] {144,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,144,144,144,144,144,144,144,144,-1,-1,-1,-1,-1,144,144,144,144,144,144,144,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm86[] {145,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,145,145,145,145,145,145,145,145,-1,-1,-1,-1,-1,145,145,145,145,145,145,145,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm87[] {138,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,138,138,138,138,138,138,138,138,-1,-1,-1,-1,-1,138,138,138,138,138,138,138,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm88[] {140,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,140,140,-1,-1,-1,-1,-1,140,140,140,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm89[] {146,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,146,146,146,146,146,146,146,146,-1,-1,-1,-1,-1,146,146,146,146,146,146,146,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,129,-1,130,-1,-1,-1,-1,-1,-1,-1,-1,-1,99,100,101,102,103,104,105,106,107,108,-1,-1,-1,-1,-1,-1},
	    sm90[] {147,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,147,147,147,147,147,147,147,147,-1,-1,-1,-1,-1,147,147,147,147,147,147,147,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm91[] {148,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,148,148,148,148,148,148,148,148,-1,-1,-1,-1,-1,148,148,148,148,148,148,148,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,129,-1,130,-1,-1,-1,-1,-1,-1,-1,-1,-1,99,100,101,102,103,104,105,106,107,108,-1,-1,-1,-1,-1,-1},
	    sm92[] {149,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,149,149,149,149,149,149,149,149,-1,-1,-1,-1,-1,149,149,149,149,149,149,149,-1,-1,-1,-1,-1,-1,-1,88,89,90,91,92,-1,93,-1,94,95,96,-1,-1,-1,-1,-1,97,98,99,100,101,102,103,104,105,106,107,108,-1,-1,17,-1,-1,-1},
	    sm93[] {150,-1,150,-1,150,-1,-1,150,150,0,-1,-1,-1,150,-1,150,150,-1,150,150,150,150,150,150,150,150,150,150,150,150,-1,-1,-1,-1,-1,150,150,150,150,150,150,150,-1,-1,-1,-1,-1,-1,-1,150,150,150,150,150,-1,150,-1,150,150,150,150,150,150,150,-1,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-1,150,-1},
	    sm94[] {151,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,151,151,151,151,151,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm95[] {152,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,152,152,152,152,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,152,152,152,152,152,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm96[] {153,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,153,153,153,153,153,153,153,153,-1,-1,-1,-1,-1,-1,153,153,153,153,153,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm97[] {154,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,154,154,154,154,154,154,154,154,-1,-1,-1,-1,-1,-1,154,154,154,154,154,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm98[] {155,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,155,155,155,155,155,155,155,155,-1,-1,-1,-1,-1,155,155,155,155,155,155,155,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm99[] {156,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,156,156,156,156,156,156,156,156,-1,-1,-1,-1,-1,156,156,156,156,156,156,156,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,156,-1,156,-1,-1,-1,-1,-1,-1,-1,-1,-1,156,156,156,156,156,156,156,156,156,156,-1,-1,-1,-1,-1,-1},
	    sm100[] {156,-1,2,-1,0,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,156,156,156,156,156,156,156,156,-1,-1,-1,-1,-1,156,156,156,156,156,156,156,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,156,-1,156,-1,-1,-1,-1,-1,-1,-1,-1,-1,156,156,156,156,156,156,156,156,156,156,-1,-1,17,-1,-1,-1},
	    sm101[] {157,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,157,157,157,157,157,157,157,157,-1,-1,-1,-1,-1,157,157,157,157,157,157,157,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,157,-1,157,-1,-1,157,157,157,157,157,-1,-1,157,157,157,157,157,157,157,157,157,157,-1,-1,-1,-1,-1,-1},
	    sm102[] {158,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,158,158,158,158,158,158,158,158,-1,-1,-1,-1,-1,158,158,158,158,158,158,158,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,158,-1,158,-1,-1,-1,-1,-1,-1,-1,-1,-1,158,158,158,158,158,158,158,158,158,158,-1,-1,-1,-1,-1,-1},
	    sm103[] {159,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,159,159,159,159,159,159,159,159,-1,-1,-1,-1,-1,159,159,159,159,159,159,159,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,159,-1,159,-1,-1,-1,-1,-1,-1,-1,-1,-1,159,159,159,159,159,159,159,159,159,159,-1,-1,-1,-1,-1,-1},
	    sm104[] {160,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,160,160,160,160,160,160,160,160,-1,-1,-1,-1,-1,160,160,160,160,160,160,160,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,160,-1,160,-1,-1,-1,-1,-1,-1,-1,-1,-1,160,160,160,160,160,160,160,160,160,160,-1,-1,-1,-1,-1,-1},
	    sm105[] {-1,161,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,162,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm106[] {-1,163,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,164,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm107[] {-1,165,165,-1,0,-1,-1,165,165,0,-1,-1,-1,165,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,165,-1,-1,-1},
	    sm108[] {166,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,166,166,166,166,166,166,166,166,-1,-1,-1,-1,-1,166,166,166,166,166,166,166,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,166,-1,166,-1,-1,167,168,169,170,171,-1,-1,166,166,166,166,166,166,166,166,166,166,-1,-1,-1,-1,-1,-1},
	    sm109[] {172,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,172,172,172,172,172,172,172,172,-1,-1,-1,-1,-1,172,172,172,172,172,172,172,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,172,-1,172,-1,-1,173,174,175,176,-1,-1,-1,172,172,172,172,172,172,172,172,172,172,-1,-1,-1,-1,-1,-1},
	    sm110[] {177,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,177,177,177,177,177,177,177,177,-1,-1,-1,-1,-1,177,177,177,177,177,177,177,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,177,-1,177,-1,-1,177,177,177,177,-1,-1,-1,177,177,177,177,177,177,177,177,177,177,-1,-1,-1,-1,-1,-1},
	    sm111[] {178,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,178,178,178,178,178,178,178,178,-1,-1,-1,-1,-1,178,178,178,178,178,178,178,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm112[] {179,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,179,179,179,179,179,179,179,179,-1,-1,-1,-1,-1,179,179,179,179,179,179,179,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm113[] {180,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,180,180,180,180,180,180,180,180,-1,-1,-1,-1,-1,180,180,180,180,180,180,180,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,129,-1,130,-1,-1,-1,-1,-1,-1,-1,-1,-1,99,100,101,102,103,104,105,106,107,108,-1,-1,-1,-1,-1,-1},
	    sm114[] {181,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,181,181,181,181,181,181,181,181,-1,-1,-1,-1,-1,181,181,181,181,181,181,181,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm115[] {182,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,182,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm116[] {-1,183,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm117[] {-1,184,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm118[] {185,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,185,185,185,185,185,185,185,185,-1,-1,-1,-1,-1,185,185,185,185,185,185,185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,185,-1,185,-1,-1,-1,-1,-1,-1,-1,-1,-1,185,185,185,185,185,185,185,185,185,185,-1,-1,-1,-1,-1,-1},
	    sm119[] {-1,186,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm120[] {187,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,187,187,187,187,187,187,187,187,-1,-1,-1,-1,-1,187,187,187,187,187,187,187,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,187,-1,187,-1,-1,-1,-1,-1,-1,-1,-1,-1,187,187,187,187,187,187,187,187,187,187,-1,-1,-1,-1,-1,-1},
	    sm121[] {-1,188,188,-1,0,-1,-1,188,188,0,-1,-1,-1,188,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm122[] {189,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,189,189,189,189,189,189,189,189,-1,-1,-1,-1,-1,189,189,189,189,189,189,189,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	    sm123[] {190,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,190,190,190,190,190,190,190,190,-1,-1,-1,-1,-1,190,190,190,190,190,190,190,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,190,-1,190,-1,-1,-1,-1,-1,-1,-1,-1,-1,190,190,190,190,190,190,190,190,190,190,-1,-1,-1,-1,-1,-1},
	    sm124[] {191,-1,-1,-1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,191,191,191,191,191,191,191,191,-1,-1,-1,-1,-1,191,191,191,191,191,191,191,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,191,-1,191,-1,-1,-1,-1,-1,-1,-1,-1,-1,191,191,191,191,191,191,191,191,191,191,-1,-1,-1,-1,-1,-1}
	    ;

	template <class Allocator, class NodeFunctions>
	struct Data {

		typedef void * (* Action)(Token&, unsigned, unsigned, int, void **, Allocator *);

	private:
		static void reduceToValue(Token& tk, int& output_offset, void ** output, int plen, Action action, unsigned bitfield, void * allocator) {
			auto ln = max(output_offset - plen + 1, 0);
			output_offset = ln;
			output[ln] = (* action)(tk, plen, bitfield,  ln, output, (Allocator *)allocator);
		}
	public:

		static const int * state_lookup[];
		static const int * goto_lookup[];
		//Lexer Symbol Array
		static const wstring tk_symbols[];

		/************ Functions *************/
		//Error Functions
		static const ErrorAction error_actions[];

		static const SymbolLookup symbol_lu;

		static int (* const state_actions[])(Token&, int&, void **, void*);

	};


	template <class Allocator, class NodeFunctions>
	const ErrorAction HC_TEMP::Data<Allocator, NodeFunctions>::error_actions[] = {&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e,&e};

	template <class Allocator, class NodeFunctions>
	const int * HC_TEMP::Data<Allocator, NodeFunctions>::goto_lookup[] = {gt1,gt2,gt2,gt3,gt4,gt2,gt5,gt6,gt7,gt2,gt2,gt2,gt2,gt2,gt8,gt2,gt2,gt2,gt2,gt9,gt2,gt2,gt2,gt2,gt2,gt10,gt2,gt2,gt2,gt2,gt2,gt11,gt2,gt2,gt12,gt7,gt7,gt2,gt2,gt2,gt13,gt14,gt2,gt2,gt2,gt15,gt2,gt2,gt2,gt2,gt2,gt16,gt17,gt18,gt19,gt20,gt2,gt7,gt2,gt21,gt22,gt2,gt2,gt2,gt2,gt23,gt2,gt2,gt24,gt2,gt2,gt25,gt2,gt2,gt26,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt7,gt2,gt2,gt27,gt2,gt28,gt29,gt30,gt31,gt32,gt33,gt34,gt35,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt36,gt2,gt37,gt38,gt39,gt40,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt41,gt2,gt42,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt43,gt2,gt44,gt2,gt2,gt45,gt46,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt7,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt2,gt47,gt48,gt2,gt2,gt2,gt2,gt49,gt2,gt2,gt2,gt2,gt2,gt50,gt2,gt2,gt2,gt2,gt2,gt2,gt51,gt2,gt2,gt2,gt2,gt2,gt2,gt2};

	template <class Allocator, class NodeFunctions>
	const int * HC_TEMP::Data<Allocator, NodeFunctions>::state_lookup[] = {sm0,sm1,sm2,sm3,sm4,sm5,sm6,sm7,sm8,sm9,sm10,sm11,sm11,sm12,sm13,sm14,sm14,sm14,sm14,sm15,sm16,sm17,sm18,sm19,sm20,sm21,sm22,sm23,sm24,sm25,sm26,sm27,sm28,sm29,sm30,sm31,sm32,sm33,sm34,sm35,sm36,sm37,sm38,sm38,sm38,sm39,sm40,sm41,sm42,sm43,sm44,sm45,sm45,sm45,sm45,sm21,sm46,sm47,sm46,sm39,sm39,sm48,sm48,sm48,sm48,sm49,sm50,sm50,sm51,sm52,sm52,sm53,sm54,sm54,sm55,sm56,sm56,sm56,sm56,sm57,sm58,sm59,sm59,sm59,sm59,sm60,sm61,sm62,sm62,sm63,sm64,sm65,sm65,sm65,sm65,sm65,sm65,sm65,sm65,sm66,sm66,sm66,sm66,sm67,sm68,sm69,sm70,sm71,sm72,sm73,sm73,sm74,sm75,sm75,sm76,sm76,sm77,sm78,sm79,sm80,sm81,sm73,sm82,sm83,sm84,sm84,sm85,sm86,sm87,sm87,sm87,sm87,sm87,sm88,sm88,sm88,sm88,sm88,sm89,sm90,sm91,sm79,sm81,sm92,sm21,sm93,sm94,sm94,sm94,sm94,sm95,sm95,sm95,sm95,sm96,sm97,sm97,sm98,sm87,sm88,sm99,sm100,sm101,sm102,sm103,sm104,sm104,sm105,sm106,sm107,sm108,sm109,sm110,sm110,sm111,sm112,sm113,sm114,sm115,sm116,sm117,sm118,sm73,sm119,sm119,sm119,sm119,sm119,sm120,sm83,sm121,sm121,sm121,sm121,sm122,sm123,sm124};

	template <class Allocator, class NodeFunctions>
	const wstring HC_TEMP::Data<Allocator, NodeFunctions>::tk_symbols[] = {L"&&",L"||"};

	template <class Allocator, class NodeFunctions>
	const SymbolLookup HC_TEMP::Data<Allocator, NodeFunctions>::symbol_lu = {
		{wstring(1, (wchar_t) 15728641),1},
		{wstring(1, (wchar_t) 15728642),2},
		{wstring(1, (wchar_t) 15728644),3},
		{wstring(1, (wchar_t) 15728648),4},
		{wstring(1, (wchar_t) 15728656),5},
		{wstring(1, (wchar_t) 15728672),6},
		{wstring(1, (wchar_t) 15728704),7},
		{wstring(1, (wchar_t) 15728768),8},
		{wstring(1, (wchar_t) 15728896),9},
		{wstring(1, (wchar_t) 15729152),10},
		{wstring(1, (wchar_t) 15728643),11},
		{wstring(1, (wchar_t) 15728904),12},
		{wstring(1, (wchar_t) 15728840),13},
		{wstring(1, (wchar_t) 15728841),14},
		{L"/",15},
		{L"?",16},
		{L":",17},
		{L"f",18},
		{L"filter",19},
		{L"Filter",20},
		{L"FILTER",21},
		{L"&&",22},
		{L"AND",23},
		{L"And",24},
		{L"and",25},
		{L"||",26},
		{L"OR",27},
		{L"Or",28},
		{L"or",29},
		{L"NOT",30},
		{L"Not",31},
		{L"not",32},
		{L"!",33},
		{L"(",34},
		{L")",35},
		{L"|",36},
		{L"s",37},
		{L"sort",38},
		{L"SORT",39},
		{L"Sort",40},
		{L",",41},
		{L"created",42},
		{L"CREATED",43},
		{L"modifier",44},
		{L"MODIFIED",45},
		{L"size",46},
		{L"SIZE",47},
		{L"#",48},
		{L"is",49},
		{L"equals",50},
		{L"=",51},
		{L"that",52},
		{L"greater",53},
		{L"than",54},
		{L">",55},
		{L"less",56},
		{L"<",57},
		{L"lesser",58},
		{L"from",59},
		{L"to",60},
		{L"-",61},
		{L"TO",62},
		{L"To",63},
		{L"through",64},
		{L"on",65},
		{L"date",66},
		{L"DES",67},
		{L"des",68},
		{L"descending",69},
		{L"DESCENDING",70},
		{L"down",71},
		{L"ASC",72},
		{L"asc",73},
		{L"ascending",74},
		{L"ASCENDING",75},
		{L"up",76},
		{L"\"",77},
		{L"'",78},
		{L"*",79},
		{L"│",80},
		{L"\\",81}
	};

	template <class Allocator, class NodeFunctions>
	int (* const Data<Allocator, NodeFunctions>::state_actions[])(Token&, int&, void **, void*) = {[](Token& tk, int& output_offset, void ** output, void * alloc)->int{(reduceToNull(0, output_offset, output)); return 2051;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 74;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 70;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 66;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 62;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 26;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 82;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 86;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 90;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 94;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 98;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 106;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 110;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 114;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 118;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 122;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 54;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 5;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 1031;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::QueryBody, 1, alloc); return 2055;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::QueryBody, 2, alloc); return 2055;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::QueryBody, 4, alloc); return 2055;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::ContainerClause, 1, alloc); return 3079;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::ContainerClause, 2, alloc); return 3079;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::ContainerClause, 4, alloc); return 3079;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 154;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::ContainerIdentifierList, 1, alloc); return 4103;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::Identifier, 1, alloc); return 40967;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 41991;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 45063;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::StringData, 1, alloc); return 44039;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 186;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 166;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 182;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::SYMBOL, 1, alloc); return 49159;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::FilterClause, 1, alloc); return 7175;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 206;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 210;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 214;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 218;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 222;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 266;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 270;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 278;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 282;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 290;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 294;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 298;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 238;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 242;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 6151;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 302;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 306;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 310;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 314;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 13319;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 326;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 330;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 334;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 338;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::QueryBody, 3, alloc); return 2059;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::QueryBody, 5, alloc); return 2059;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::QueryBody, 6, alloc); return 2059;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ContainerClause, 3, alloc); return 3083;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ContainerClause, 5, alloc); return 3083;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ContainerClause, 6, alloc); return 3083;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ContainerIdentifierList, 3, alloc); return 4107;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ContainerIdentifier, 3, alloc); return 5131;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::Identifier, 3, alloc); return 40971;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::StringData, 3, alloc); return 44043;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::StringDataVal, 1, alloc); return 46087;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::SYMBOL, 1, alloc); return 48135;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::FilterClause, 3, alloc); return 7179;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 9223;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 366;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 370;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 374;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 378;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 10247;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 382;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 386;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 390;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 394;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 11271;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 12295;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 16391;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::CreatedStatement, 1, alloc); return 18439;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 446;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 458;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 462;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 466;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 474;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 470;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 478;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 482;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 490;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 498;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 502;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 514;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 518;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 522;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 526;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 530;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 534;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 538;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 542;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 546;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 550;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 17415;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::ModifiedStatement, 1, alloc); return 20487;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 19463;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 566;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 570;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 21511;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(2, output_offset, output); return 6155;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::SortClause, 3, alloc); return 14347;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 578;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::SortStatementList, 1, alloc); return 15367;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(2, output_offset, output); return 13323;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::QueryBody, 7, alloc); return 2063;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::ContainerClause, 7, alloc); return 3087;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::StringDataVal, 3, alloc); return 46091;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::EscapedValue, 3, alloc); return 47115;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::NotNode, 3, alloc); return 11275;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 618;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 622;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 626;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::CreatedStatement, 3, alloc); return 18443;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 634;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 638;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::CreatedStatement, 5, alloc); return 18443;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 650;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 24583;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 670;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 674;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::LAST, 2, alloc); return 27655;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 678;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 37895;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 25607;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 38919;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 26631;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 28679;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 32775;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::OrderDescending, 1, alloc); return 39943;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::OrderAscending, 1, alloc); return 39943;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ModifiedStatement, 3, alloc); return 20491;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ModifiedStatement, 5, alloc); return 20491;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::SizeStatement, 3, alloc); return 22539;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::TagStatement, 3, alloc); return 23563;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::StringDataVal, 7, alloc); return 46095;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::AndNode, 7, alloc); return 9231;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::OrNode, 7, alloc); return 10255;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::WrappedExpression, 7, alloc); return 12303;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::Sentence, 7, alloc); return 43023;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::CreatedStatement, 7, alloc); return 18447;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ComparisonExpressionEquals, 3, alloc); return 27659;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,1,&NodeFunctions::NUMBER, 1, alloc); return 50183;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ComparisonExpressionMore, 3, alloc); return 27659;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::ComparisonExpressionLess, 3, alloc); return 27659;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::LAST, 3, alloc); return 27659;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(2, output_offset, output); return 25611;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 718;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(2, output_offset, output); return 26635;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 722;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(2, output_offset, output); return 24587;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::RangeExpression, 3, alloc); return 31755;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 734;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 738;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 742;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 746;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 750;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,2,&NodeFunctions::DateExpression, 3, alloc); return 36875;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 762;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 766;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 770;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{; return 774;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 33799;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::ModifiedStatement, 7, alloc); return 20495;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::SizeStatement, 7, alloc); return 22543;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::TagStatement, 7, alloc); return 23567;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::TagStatement, 11, alloc); return 23567;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::SortStatementList, 7, alloc); return 15375;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(3, output_offset, output); return 25615;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(3, output_offset, output); return 26639;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::RangeExpression, 7, alloc); return 31759;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 29703;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,3,&NodeFunctions::DateExpression, 7, alloc); return 36879;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(1, output_offset, output); return 34823;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{Data<Allocator, NodeFunctions>::reduceToValue(tk,output_offset,output,4,&NodeFunctions::TagStatement, 15, alloc); return 23571;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(2, output_offset, output); return 30731;},
	        [](Token& tk, int& output_offset, void ** output, void * alloc)->int{reduceToNull(2, output_offset, output); return 35851;}
	                                                                                              };
}
