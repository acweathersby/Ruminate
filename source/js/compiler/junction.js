let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["((","))","&&","||"],

    /* Goto lookup maps */
    gt0 = [0,-2,2,1,-2,3,-3,4,5,7,6],
gt1 = [0,-2,18,-3,19,-3,4,5,7,6],
gt2 = [0,-10,20,5,7,6],
gt3 = [0,-13,21],
gt4 = [0,-14,22,23,24,29,25,31,42,26,-5,48,-1,27,-24,32,30,33,-2,35,34,-2,37],
gt5 = [0,-20,42,55,-5,48,-1,56],
gt6 = [0,-27,48,-1,57],
gt7 = [0,-17,58,-1,31,-34,32,59,33,-2,35,34,-2,37],
gt8 = [0,-19,61,-34,32,60,33,-2,35,34,-2,37],
gt9 = [0,-56,63,-2,35,34,-2,37],
gt10 = [0,-58,64,-2,65,67,66],
gt11 = [0,-23,70,71,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt12 = [0,-28,102,-1,103,88,84,91,85,94,86,87],
gt13 = [0,-5,108],
gt14 = [0,-27,48,-1,110],
gt15 = [0,-19,61,-34,32,111,33,-2,35,34,-2,37],
gt16 = [0,-61,112,67,66],
gt17 = [0,-63,113],
gt18 = [0,-26,122,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt19 = [0,-26,123,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt20 = [0,-26,124,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt21 = [0,-26,125,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt22 = [0,-30,126,88,84,91,85,94,86,87],
gt23 = [0,-59,127,-3,37],
gt24 = [0,-59,128,-3,37],
gt25 = [0,-38,131,132,133,129,144,-2,135,146,-3,136,149,150,130],
gt26 = [0,-38,131,132,133,161,144,-2,135,146,-3,136,149,150,162],
gt27 = [0,-38,131,132,133,163,144,-2,135,146,-3,136],
gt28 = [0,-54,32,166,33,-2,35,34,-2,37],
gt29 = [0,-4,168,-2,172,171,170,-1,173,7,6],
gt30 = [0,-23,174,71,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt31 = [0,-23,175,71,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt32 = [0,-23,176,71,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt33 = [0,-23,177,71,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt34 = [0,-24,178,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt35 = [0,-24,179,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt36 = [0,-24,180,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt37 = [0,-24,181,72,73,-3,81,88,84,91,85,94,86,87,-16,32,80,33,79,-1,35,34,-2,37],
gt38 = [0,-51,149,150,185],
gt39 = [0,-54,32,189,33,-2,35,34,-2,37],
gt40 = [0,-42,144,-2,192,146,-3,193],
gt41 = [0,-47,198,-11,199,-3,37],
gt42 = [0,-51,149,150,201],
gt43 = [0,-51,149,150,202],
gt44 = [0,-38,131,132,133,203,144,-2,135,146,-3,136,149,150,204],
gt45 = [0,-30,205,88,84,91,85,94,86,87],
gt46 = [0,-11,208,7,6],
gt47 = [0,-43,212,211],
gt48 = [0,-48,219,218],
gt49 = [0,-51,149,150,224],
gt50 = [0,-7,172,171,225,-1,173,7,6],
gt51 = [0,-47,227,-11,199,-3,37],

    // State action lookup maps
    sm0=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-4,9,-3,10],
sm1=[0,11,-1,1,-1,2,3,4,5,6,7,-3,8,-4,9,-3,10],
sm2=[0,12,-1,1,-1,2,3,4,5,6,7,-3,8,-4,12,-3,10],
sm3=[0,13,-1,13,-1,13,13,13,13,13,13,-3,13,-4,13,-3,13],
sm4=[0,14,-1,14,-1,14,14,14,14,14,14,-3,14,-4,14,-3,14],
sm5=[0,15,-1,15,-1,15,15,15,15,15,15,-3,15,-4,15,-3,15],
sm6=[0,16,-1,16,-1,16,16,16,16,16,16,-3,16,-1,16,-1,16,16,-3,16],
sm7=[0,17,-1,17,-1,17,17,17,17,17,17,-3,17,-1,17,-1,17,17,-3,17],
sm8=[0,-2,1,-1,0,3,4,5,6,0,-3,8],
sm9=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,22,-9,23,24,-1,25,26,27,28,-14,29,30,31,32,33,-38,34],
sm10=[0,35,-1,1,-1,2,3,4,5,6,7,-3,8,-4,35,-3,10],
sm11=[0,36,-1,36,-1,36,36,36,36,36,36,-3,36,-4,36,-3,36],
sm12=[0,37,-1,37,-1,37,37,37,37,37,37,-3,37,-4,37,-3,37],
sm13=[0,38,-1,38,-1,38,38,38,38,38,38,-3,38,-1,38,-1,38,38,-3,38],
sm14=[0,-4,0,-4,0,-9,39],
sm15=[0,-4,0,-4,0,-9,40],
sm16=[0,-4,0,-4,0,-9,41],
sm17=[0,-4,0,-4,0,-9,42,-10,24,-1,25,26,27,28,-14,29,30,31,32,33],
sm18=[0,-4,0,-4,0,-9,43,-30,29,30,31,32,33],
sm19=[0,-4,0,-4,0,-9,44],
sm20=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,45,-10,45,-1,45,45,45,45,-14,45,45,45,45,45,-38,34],
sm21=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,46,-10,46,-1,46,46,46,46,-14,46,46,46,46,46,-38,34],
sm22=[0,-4,0,-4,0,-9,47,-9,48,47,-1,47,47,47,47,-14,47,47,47,47,47],
sm23=[0,-2,49,-1,0,-2,49,49,0,-3,49,-5,49,-10,49,-1,49,49,49,49,-14,49,49,49,49,49,-38,49],
sm24=[0,-2,18,-1,0,-2,19,20,0,-3,21,-1,50,-3,50,-9,50,50,-1,50,50,50,50,50,50,50,50,50,50,50,50,-5,50,50,50,50,50,50,-7,50,50,50,50,50,-1,50,-1,50,50,-1,50,-5,50,50,50,50,50,50,50,50,50,50,50,50,-2,34],
sm25=[0,-2,51,-1,0,-2,51,51,0,-3,51,-1,51,-3,51,-9,51,51,-1,51,51,51,51,51,51,51,51,51,51,51,51,-5,51,51,51,51,51,51,-7,51,51,51,51,51,-1,51,-1,51,51,-1,51,-5,51,51,51,51,51,51,51,51,51,51,51,51,-2,51],
sm26=[0,-2,52,-1,0,-2,52,52,0,-3,52,-1,52,-3,52,-9,52,52,-1,52,52,52,52,52,52,52,52,52,52,52,52,-5,52,52,52,52,52,52,-7,52,52,52,52,52,-1,52,-1,52,52,-1,52,-5,52,52,52,52,52,52,52,52,52,52,52,52,-2,52],
sm27=[0,-2,53,-1,0,-2,53,53,0,-3,53,-1,53,-3,53,-9,53,53,-1,53,53,53,53,53,53,53,53,53,53,53,53,-5,53,53,53,53,53,53,-7,53,53,53,53,53,-1,53,-1,53,53,-1,53,-5,53,53,53,53,53,53,53,53,53,53,53,53,-2,53],
sm28=[0,-2,18,-1,54,-2,19,20,0,-3,21,-1,55,-3,55,-2,56,-6,55,55,-1,55,55,55,55,55,55,55,55,55,55,55,55,-5,55,55,55,55,55,55,-7,55,55,55,55,55,-1,55,-1,55,55,-1,55,55,55,55,55,-1,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],
sm29=[0,-2,57,-1,57,-2,57,57,0,-3,57,-1,57,-3,57,-2,57,-6,57,57,-1,57,57,57,57,57,57,57,57,57,57,57,57,-5,57,57,57,57,57,57,-7,57,57,57,57,57,-1,57,-1,57,57,-1,57,57,57,57,57,-1,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],
sm30=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,58,-24,59,60,61,62,63,-1,58,58,58,58,58,64,65,66,67,68,69,70,-29,71,72,34],
sm31=[0,-2,73,-1,0,-2,73,73,0,-3,73,-5,73,-11,74,-12,73,73,73,73,73,-1,73,73,73,73,73,73,73,73,73,73,73,73,-29,73,73,73],
sm32=[0,-2,73,-1,0,-2,73,73,0,-3,73,-5,73,-11,75,-12,73,73,73,73,73,-1,73,73,73,73,73,73,73,73,73,73,73,73,-29,73,73,73],
sm33=[0,-2,73,-1,0,-2,73,73,0,-3,73,-5,73,-11,76,-12,73,73,73,73,73,-1,73,73,73,73,73,73,73,73,73,73,73,73,-29,73,73,73],
sm34=[0,-2,73,-1,0,-2,73,73,0,-3,73,-5,73,-24,73,73,73,73,73,-1,73,73,73,73,73,73,73,73,73,73,73,73,-29,73,73,73],
sm35=[0,-2,73,-1,0,-2,73,73,0,-3,73,-5,73,-11,77,-12,73,73,73,73,73,-1,73,73,73,73,73,73,73,73,73,73,73,73,-29,73,73,73],
sm36=[0,-4,0,-4,0,-9,78,-35,64,65,66,67,68,69,70],
sm37=[0,-4,0,-4,0,-9,79,-35,79,79,79,79,79,79,79],
sm38=[0,-4,0,-4,0,-9,79,-11,80,-23,79,79,79,79,79,79,79],
sm39=[0,-4,0,-4,0,-9,79,-11,81,-23,79,79,79,79,79,79,79],
sm40=[0,-4,0,-4,0,-9,79,-11,82,-23,79,79,79,79,79,79,79],
sm41=[0,-4,0,-4,0,-9,79,-11,83,-23,79,79,79,79,79,79,79],
sm42=[0,84,-1,84,-1,84,84,84,84,84,84,-3,84,-2,85,-1,84,-3,84],
sm43=[0,-4,0,-4,0,-9,86,-30,29,30,31,32,33],
sm44=[0,-4,0,-4,0,-9,87],
sm45=[0,-4,0,-4,0,-9,88],
sm46=[0,-2,18,-1,0,-2,19,20,0,-3,21,-5,89,-10,89,-1,89,89,89,89,-14,89,89,89,89,89,-38,34],
sm47=[0,-4,0,-4,0,-9,90,-9,48,90,-1,90,90,90,90,-14,90,90,90,90,90],
sm48=[0,-4,0,-4,0,-9,91,-9,48,91,-1,91,91,91,91,-14,91,91,91,91,91],
sm49=[0,-2,92,-1,0,-2,92,92,0,-3,92,-5,92,-10,92,-1,92,92,92,92,-14,92,92,92,92,92,-38,92],
sm50=[0,-2,93,-1,0,-2,93,93,0,-3,93,-5,93,-10,93,-1,93,93,93,93,-14,93,93,93,93,93,-38,93],
sm51=[0,-2,94,-1,0,-2,94,94,0,-3,94,-1,94,-3,94,-9,94,94,-1,94,94,94,94,94,94,94,94,94,94,94,94,-5,94,94,94,94,94,94,-7,94,94,94,94,94,-1,94,-1,94,94,-1,94,-5,94,94,94,94,94,94,94,94,94,94,94,94,-2,94],
sm52=[0,-2,18,-1,54,-2,19,20,0,-3,21,-1,95,-3,95,-2,56,-6,95,95,-1,95,95,95,95,95,95,95,95,95,95,95,95,-5,95,95,95,95,95,95,-7,95,95,95,95,95,-1,95,-1,95,95,-1,95,95,95,95,95,-1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95],
sm53=[0,-2,96,-1,96,-2,96,96,0,-3,96,-1,96,-3,96,-2,96,-6,96,96,-1,96,96,96,96,96,96,96,96,96,96,96,96,-5,96,96,96,96,96,96,-7,96,96,96,96,96,-1,96,-1,96,96,-1,96,96,96,96,96,-1,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96],
sm54=[0,-2,97,-1,97,-2,97,97,0,-3,97,-1,97,-3,97,-2,97,-6,97,97,-1,97,97,97,97,97,97,97,97,97,97,97,97,-5,97,97,97,97,97,97,-7,97,97,97,97,97,-1,97,-1,97,97,-1,97,97,97,97,97,-1,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97],
sm55=[0,-2,18,-1,0,-2,19,20,0,-3,21],
sm56=[0,-4,0,-4,0,-9,98,-30,98,98,98,98,98],
sm57=[0,-4,0,-4,0,-9,99,-16,100,101,102,103,-10,99,99,99,99,99],
sm58=[0,-4,0,-4,0,-9,104,-16,104,104,104,104,105,106,107,108,-6,104,104,104,104,104],
sm59=[0,-4,0,-4,0,-9,109,-16,109,109,109,109,109,109,109,109,-6,109,109,109,109,109],
sm60=[0,-2,18,-1,0,-2,19,20,0,-3,21,-34,63,-6,64,65,66,67,68,69,70,-29,71,72,34],
sm61=[0,-4,0,-4,0,-45,64,65,66,67,68,69,70],
sm62=[0,-4,0,-4,0,-9,110,-16,110,110,110,110,110,110,110,110,-6,110,110,110,110,110],
sm63=[0,-4,0,-4,0,-9,111,-16,111,111,111,111,111,111,111,111,-6,111,111,111,111,111],
sm64=[0,-4,0,-4,0,-5,112,-3,112,-16,112,112,112,112,112,112,112,112,-5,112,112,112,112,112,112],
sm65=[0,-4,0,-4,0,-5,113,-3,113,-16,113,113,113,113,113,113,113,113,-5,113,113,113,113,113,113,-7,114,115,116,117,118,-1,119,-1,120,121,-1,122,-5,123,124,125,126,127,128,129,130,131,132,133,134],
sm66=[0,-4,0,-4,0,-5,135,-3,135,-16,135,135,135,135,135,135,135,135,-5,135,135,135,135,135,135,-7,135,135,135,135,135,-1,135,-1,135,135,-1,135,-5,135,135,135,135,135,135,135,135,135,135,135,135],
sm67=[0,-4,0,-4,0,-5,136,-3,136,-16,136,136,136,136,136,136,136,136,-5,136,136,136,136,136,136,-7,114,115,116,117,118,-1,119,-1,120,121,-1,122,-5,123,124,125,126,127,128,129,130,131,132,133,134],
sm68=[0,-4,0,-4,0,-5,137,-3,137,-16,137,137,137,137,137,137,137,137,-5,137,137,137,137,137,137,-7,137,137,137,137,137,-1,137,-1,137,137,-1,137,-5,137,137,137,137,137,137,137,137,137,137,137,137],
sm69=[0,-4,0,-4,0,-52,114,115,116,117,118,-1,138,-1,139,121,-1,122,-5,123,124],
sm70=[0,-4,0,-4,0,-52,140,140,140,140,140,-1,140,-1,140,140,-1,140,-5,140,140],
sm71=[0,-2,18,-1,0,-2,19,20,0,-3,21,-79,34],
sm72=[0,-2,141,-1,0,-2,141,141,0,-3,141,-5,141,-24,141,141,141,141,141,-1,141,141,141,141,141,141,141,141,141,141,141,141,-29,141,141,141],
sm73=[0,-4,0,-4,0,-5,142,-3,143],
sm74=[0,-4,0,-4,0,-5,144,-3,144],
sm75=[0,-4,0,-4,0,-9,145,-35,145,145,145,145,145,145,145],
sm76=[0,146,-1,146,-1,146,146,146,146,146,146,-3,146,-4,146,-3,146],
sm77=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-1,147,-1,148,-4,10],
sm78=[0,-4,0,-4,0,-9,149],
sm79=[0,-4,0,-4,0,-9,150,-9,48,150,-1,150,150,150,150,-14,150,150,150,150,150],
sm80=[0,-2,151,-1,151,-2,151,151,0,-3,151,-1,151,-3,151,-2,151,-6,151,151,-1,151,151,151,151,151,151,151,151,151,151,151,151,-5,151,151,151,151,151,151,-7,151,151,151,151,151,-1,151,-1,151,151,-1,151,151,151,151,151,-1,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151],
sm81=[0,-2,152,-1,152,-2,152,152,0,-3,152,-1,152,-3,152,-2,152,-6,152,152,-1,152,152,152,152,152,152,152,152,152,152,152,152,-5,152,152,152,152,152,152,-7,152,152,152,152,152,-1,152,-1,152,152,-1,152,152,152,152,152,-1,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152],
sm82=[0,-2,18,-1,0,-2,19,20,0,-3,21,-30,59,60,61,62,63,-6,64,65,66,67,68,69,70,-29,71,72,34],
sm83=[0,-4,0,-4,0,-9,153,-16,153,153,153,153,153,153,153,153,-6,153,153,153,153,153],
sm84=[0,-4,0,-4,0,-39,154],
sm85=[0,-4,0,-4,0,-81,155],
sm86=[0,-4,0,-4,0,-82,156],
sm87=[0,-4,0,-4,0,-5,157,-3,157,-16,157,157,157,157,157,157,157,157,-5,157,157,157,157,157,157,-13,158,-1,159,-10,125,126,127,128,129,130,131,132,133,134],
sm88=[0,-4,0,-4,0,-5,160,-3,160,-16,160,160,160,160,160,160,160,160,-5,160,160,160,160,160,160],
sm89=[0,-1,161,18,-1,0,-2,19,20,0,-3,21,-79,34],
sm90=[0,-1,162,-2,0,-4,0],
sm91=[0,-1,163,-2,0,-4,0],
sm92=[0,-1,164,164,-1,0,-2,164,164,0,-3,164,-52,165,-2,166,-3,122,-5,123,124,-12,164],
sm93=[0,-4,0,-4,0,-5,167,-3,167,-16,167,167,167,167,167,167,167,167,-5,167,167,167,167,167,167,-13,167,-1,167,-10,167,167,167,167,167,167,167,167,167,167],
sm94=[0,-1,164,164,-1,0,-2,164,164,0,-3,164,-79,164],
sm95=[0,-4,0,-4,0,-52,168],
sm96=[0,-1,169,-2,0,-4,0,-5,170,-3,170,-16,170,170,170,170,170,170,170,170,-5,170,170,170,170,170,170],
sm97=[0,-1,169,-2,0,-4,0],
sm98=[0,-1,171,-2,0,-4,0,-5,172,-3,172,-16,172,172,172,172,172,172,172,172,-5,172,172,172,172,172,172],
sm99=[0,-1,171,-2,0,-4,0],
sm100=[0,-1,173,-2,0,-4,0],
sm101=[0,-1,174,-2,0,-4,0],
sm102=[0,-1,175,18,-1,0,-2,19,20,0,-3,21],
sm103=[0,-1,176,176,-1,0,-2,176,176,0,-3,176],
sm104=[0,-4,0,-4,0,-5,177,-3,177,-16,177,177,177,177,177,177,177,177,-5,177,177,177,177,177,177],
sm105=[0,-4,0,-4,0,-5,178,-3,178,-16,178,178,178,178,178,178,178,178,-5,178,178,178,178,178,178],
sm106=[0,-4,0,-4,0,-5,170,-3,170,-16,170,170,170,170,170,170,170,170,-5,170,170,170,170,170,170],
sm107=[0,-4,0,-4,0,-5,172,-3,172,-16,172,172,172,172,172,172,172,172,-5,172,172,172,172,172,172],
sm108=[0,-4,0,-4,0,-5,179,-3,179,-16,179,179,179,179,179,179,179,179,-5,179,179,179,179,179,179,-13,158,-1,159,-10,125,126,127,128,129,130,131,132,133,134],
sm109=[0,-4,0,-4,0,-5,180,-3,180,-16,180,180,180,180,180,180,180,180,-5,180,180,180,180,180,180],
sm110=[0,-4,0,-4,0,-5,181,-3,181,-16,181,181,181,181,181,181,181,181,-5,181,181,181,181,181,181,-13,158,-1,159,-10,125,126,127,128,129,130,131,132,133,134],
sm111=[0,-4,0,-4,0,-5,182,-3,182,-16,182,182,182,182,182,182,182,182,-5,182,182,182,182,182,182,-7,114,115,116,117,118,-1,119,-1,120,121,-1,122,-5,123,124,125,126,127,128,129,130,131,132,133,134],
sm112=[0,-4,0,-4,0,-5,183,-1,184],
sm113=[0,185,-1,185,-1,185,185,185,185,185,185,-3,185,-4,185,-3,185],
sm114=[0,-4,0,-4,0,-5,186,-1,186],
sm115=[0,-4,0,-4,0,-5,187,-1,187],
sm116=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-1,188,-1,188,-4,10],
sm117=[0,-2,189,-1,189,189,189,189,189,189,-3,189,-1,189,-1,189,-4,189],
sm118=[0,-4,0,-4,0,-9,190,-30,190,190,190,190,190],
sm119=[0,-4,0,-4,0,-9,191,-16,191,191,191,191,-10,191,191,191,191,191],
sm120=[0,-4,0,-4,0,-9,192,-16,192,192,192,192,192,192,192,192,-6,192,192,192,192,192],
sm121=[0,-4,0,-4,0,-9,193,-16,193,193,193,193,193,193,193,193,-6,193,193,193,193,193],
sm122=[0,-4,0,-4,0,-5,194,-3,194,-16,194,194,194,194,194,194,194,194,-5,194,194,194,194,194,194],
sm123=[0,-4,0,-4,0,-5,195,-3,195,-16,195,195,195,195,195,195,195,195,-5,195,195,195,195,195,195,-13,195,-1,195,-10,195,195,195,195,195,195,195,195,195,195],
sm124=[0,-4,0,-4,0,-5,196,-3,196,-16,196,196,196,196,196,196,196,196,-5,196,196,196,196,196,196,-13,196,-1,196,-10,196,196,196,196,196,196,196,196,196,196],
sm125=[0,-4,0,-4,0,-5,197,-3,197,-16,197,197,197,197,197,197,197,197,-5,197,197,197,197,197,197,-13,197,-1,197,-10,197,197,197,197,197,197,197,197,197,197],
sm126=[0,-4,0,-4,0,-5,198,-3,198,-16,198,198,198,198,198,198,198,198,-5,198,198,198,198,198,198,-13,198,-1,198,-10,198,198,198,198,198,198,198,198,198,198],
sm127=[0,-4,0,-4,0,-5,199,-3,199,-16,199,199,199,199,199,199,199,199,-5,199,199,199,199,199,199,-13,199,-1,199,-10,199,199,199,199,199,199,199,199,199,199],
sm128=[0,-1,200,-2,0,-4,0,-57,201],
sm129=[0,-1,202,-2,0,-4,0,-57,203],
sm130=[0,-1,204,204,-1,0,-2,204,204,0,-3,204,-79,204],
sm131=[0,-4,0,-4,0,-5,205,-3,205,-16,205,205,205,205,205,205,205,205,-5,205,205,205,205,205,205,-13,205,-1,205,-3,206,207,208,209,210,-2,205,205,205,205,205,205,205,205,205,205],
sm132=[0,-4,0,-4,0,-5,211,-3,211,-16,211,211,211,211,211,211,211,211,-5,211,211,211,211,211,211,-13,211,-1,211,-3,212,213,214,215,-3,211,211,211,211,211,211,211,211,211,211],
sm133=[0,-4,0,-4,0,-5,216,-3,216,-16,216,216,216,216,216,216,216,216,-5,216,216,216,216,216,216,-13,216,-1,216,-3,216,216,216,216,-3,216,216,216,216,216,216,216,216,216,216],
sm134=[0,-4,0,-4,0,-5,217,-3,217,-16,217,217,217,217,217,217,217,217,-5,217,217,217,217,217,217],
sm135=[0,-4,0,-4,0,-5,218,-3,218,-16,218,218,218,218,218,218,218,218,-5,218,218,218,218,218,218],
sm136=[0,-4,0,-4,0,-5,219,-3,219,-16,219,219,219,219,219,219,219,219,-5,219,219,219,219,219,219,-13,158,-1,159,-10,125,126,127,128,129,130,131,132,133,134],
sm137=[0,-4,0,-4,0,-5,220,-3,220,-16,220,220,220,220,220,220,220,220,-5,220,220,220,220,220,220],
sm138=[0,-4,0,-4,0,-5,221,-3,221],
sm139=[0,222,-1,222,-1,222,222,222,222,222,222,-3,222,-4,222,-3,222],
sm140=[0,-2,1,-1,2,3,4,5,6,7,-3,8,-1,147,-1,147,-4,10],
sm141=[0,-2,223,-1,223,223,223,223,223,223,-3,223,-1,223,-1,223,-4,223],
sm142=[0,-1,224,-2,0,-4,0],
sm143=[0,-1,225,-2,0,-4,0],
sm144=[0,-4,0,-4,0,-5,226,-3,226,-16,226,226,226,226,226,226,226,226,-5,226,226,226,226,226,226,-13,226,-1,226,-10,226,226,226,226,226,226,226,226,226,226],
sm145=[0,-1,227,-2,0,-4,0],
sm146=[0,-1,228,-2,0,-4,0],
sm147=[0,-4,0,-4,0,-5,229,-3,229,-16,229,229,229,229,229,229,229,229,-5,229,229,229,229,229,229,-13,229,-1,229,-10,229,229,229,229,229,229,229,229,229,229],
sm148=[0,-1,230,230,-1,0,-2,230,230,0,-3,230],
sm149=[0,-4,0,-4,0,-5,231,-3,231,-16,231,231,231,231,231,231,231,231,-5,231,231,231,231,231,231],
sm150=[0,-4,0,-4,0,-5,232,-1,232],
sm151=[0,-4,0,-4,0,-5,233,-3,233,-16,233,233,233,233,233,233,233,233,-5,233,233,233,233,233,233,-13,233,-1,233,-10,233,233,233,233,233,233,233,233,233,233],
sm152=[0,-4,0,-4,0,-5,234,-3,234,-16,234,234,234,234,234,234,234,234,-5,234,234,234,234,234,234,-13,234,-1,234,-10,234,234,234,234,234,234,234,234,234,234],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,12],[200,13],[201,14],[",",15],["[",16],["]",17],["((",18],["))",19],[null,1],["\\",22],["/",29],["?",30],[":",31],["f",32],["filter",33],["Filter",34],["FILTER",35],["&&",36],["AND",37],["And",38],["and",39],["||",40],["OR",41],["Or",42],["or",43],["NOT",44],["Not",45],["not",46],["!",47],["(",48],[")",49],["|",50],["s",51],["sort",52],["SORT",53],["Sort",54],["created",55],["CREATED",56],["modifier",57],["MODIFIED",58],["size",59],["SIZE",60],["#",61],["is",62],["equals",63],["=",64],["that",65],["greater",66],["than",67],[">",68],["less",69],["<",70],["lesser",71],["from",73],["to",74],["-",75],["TO",76],["To",77],["through",78],["on",79],["date",80],["DES",81],["des",82],["descending",83],["DESCENDING",84],["down",85],["ASC",86],["asc",87],["ascending",88],["ASCENDING",89],["up",90],["\"",91],["'",92],["*",93]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[12,264],[13,200],[14,201],[15,","],[16,"["],[17,"]"],[18,"(("],[19,"))"],[1,null],[22,"\\"],[29,"/"],[30,"?"],[31,":"],[32,"f"],[33,"filter"],[34,"Filter"],[35,"FILTER"],[36,"&&"],[37,"AND"],[38,"And"],[39,"and"],[40,"||"],[41,"OR"],[42,"Or"],[43,"or"],[44,"NOT"],[45,"Not"],[46,"not"],[47,"!"],[48,"("],[49,")"],[50,"|"],[51,"s"],[52,"sort"],[53,"SORT"],[54,"Sort"],[55,"created"],[56,"CREATED"],[57,"modifier"],[58,"MODIFIED"],[59,"size"],[60,"SIZE"],[61,"#"],[62,"is"],[63,"equals"],[64,"="],[65,"that"],[66,"greater"],[67,"than"],[68,">"],[69,"less"],[70,"<"],[71,"lesser"],[73,"from"],[74,"to"],[75,"-"],[76,"TO"],[77,"To"],[78,"through"],[79,"on"],[80,"date"],[81,"DES"],[82,"des"],[83,"descending"],[84,"DESCENDING"],[85,"down"],[86,"ASC"],[87,"asc"],[88,"ascending"],[89,"ASCENDING"],[90,"up"],[91,"\""],[92,"'"],[93,"*"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm3,
sm4,
sm5,
sm6,
sm6,
sm6,
sm6,
sm7,
sm7,
sm7,
sm7,
sm7,
sm7,
sm8,
sm9,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm18,
sm19,
sm20,
sm21,
sm22,
sm23,
sm24,
sm25,
sm26,
sm26,
sm27,
sm28,
sm29,
sm29,
sm29,
sm29,
sm30,
sm31,
sm32,
sm33,
sm34,
sm35,
sm36,
sm37,
sm38,
sm39,
sm40,
sm41,
sm42,
sm43,
sm44,
sm45,
sm46,
sm47,
sm48,
sm49,
sm50,
sm51,
sm52,
sm53,
sm54,
sm54,
sm54,
sm55,
sm56,
sm57,
sm58,
sm59,
sm60,
sm60,
sm60,
sm60,
sm61,
sm62,
sm62,
sm63,
sm55,
sm55,
sm64,
sm64,
sm64,
sm64,
sm65,
sm66,
sm66,
sm67,
sm68,
sm68,
sm69,
sm70,
sm70,
sm71,
sm72,
sm72,
sm72,
sm72,
sm73,
sm74,
sm75,
sm75,
sm75,
sm75,
sm76,
sm77,
sm78,
sm79,
sm80,
sm81,
sm82,
sm82,
sm82,
sm82,
sm82,
sm82,
sm82,
sm82,
sm83,
sm83,
sm83,
sm83,
sm84,
sm85,
sm86,
sm87,
sm88,
sm89,
sm90,
sm91,
sm92,
sm93,
sm93,
sm94,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm100,
sm101,
sm102,
sm103,
sm103,
sm104,
sm105,
sm106,
sm106,
sm106,
sm106,
sm106,
sm107,
sm107,
sm107,
sm107,
sm107,
sm108,
sm109,
sm110,
sm97,
sm99,
sm111,
sm61,
sm112,
sm113,
sm114,
sm115,
sm116,
sm117,
sm118,
sm118,
sm118,
sm118,
sm119,
sm119,
sm119,
sm119,
sm120,
sm121,
sm121,
sm122,
sm106,
sm107,
sm123,
sm124,
sm125,
sm126,
sm127,
sm127,
sm128,
sm129,
sm130,
sm131,
sm132,
sm133,
sm133,
sm134,
sm135,
sm136,
sm137,
sm138,
sm139,
sm140,
sm141,
sm142,
sm143,
sm144,
sm145,
sm146,
sm146,
sm146,
sm146,
sm146,
sm147,
sm102,
sm148,
sm148,
sm148,
sm148,
sm149,
sm150,
sm151,
sm152],

/************ Functions *************/

    max = Math.max, min = Math.min,

    //Error Functions
    e = (tk,r,o,l,p)=>{if(l.END)l.throw("Unexpected end of input");else if(l.ty & (264)) l.throw(`Unexpected space character within input "${p.slice(l)}" `) ; else l.throw(`Unexpected token [${l.tx}]`)}, 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = fn(slice, e, l, s, o, plen);        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = new Fn(slice, e, l, s, o, plen);        return ret;    },
redn = (ret, plen, t, e, o) => {        if (plen > 0) {            let ln = max(o.length - plen, 0);            o[ln] = o[o.length - 1];            o.length = ln + 1;        }        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R10_string_data_list=sym=>(((sym[1] !== null) ? sym[0].push(sym[1]) : null,sym[0])),
R11_string_data_list=sym=>(sym[0] !== null) ? [sym[0]] : [],
R30_items=()=>[],
R31_items=sym=>[sym[0]],
R32_items=sym=>sym[0],
R33_items=sym=>((sym[0].push(sym[1]),sym[0])),
R40_data_string_list=sym=>(((sym[1] !== null) ? sym[0].push(sym[2]) : null,sym[0])),
R50_undefined621_group=sym=>sym[1],
R51_undefined621_group=()=>$sym2,
C60_data_insert_point=function (sym,env,lex){this.start = env.start;this.end = lex.off;this.query = sym[1];this.action = sym[3];},
I61_data_insert_point=function (sym,env,lex){env.start = lex.off;},
C62_data_insert_point=function (sym,env,lex){this.start = env.start;this.end = lex.off;this.query = sym[1];this.action = null;},
R70_string_data_val_list=sym=>sym[0] + sym[1],
R71_string_data_val_list=sym=>sym[0] + "",
C160_r_query_body=function (sym){this.container = sym[0];this.filter = sym[1];this.sort = sym[2];},
C161_r_query_body=function (sym){this.container = null;this.filter = sym[0];this.sort = sym[1];},
C162_r_query_body=function (sym){this.container = sym[0];this.filter = null;this.sort = sym[1];},
C163_r_query_body=function (sym){this.container = sym[0];this.filter = sym[1];this.sort = null;},
C164_r_query_body=function (sym){this.container = null;this.filter = null;this.sort = sym[0];},
C165_r_query_body=function (sym){this.container = null;this.filter = sym[0];this.sort = null;},
C166_r_query_body=function (sym){this.container = sym[0];this.filter = null;this.sort = null;},
C167_r_query_body=function (){this.container = null;this.filter = null;this.sort = null;},
C180_r_container_clause=function (sym){this.containers = [{ids : [""]},...sym[1]];this.id = sym[2];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C181_r_container_clause=function (sym){this.containers = [{ids : [""]},...sym[0]];this.id = sym[1];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C182_r_container_clause=function (sym){this.containers = [{ids : [""]}];this.id = sym[1];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C183_r_container_clause=function (sym){this.containers = [{ids : [""]},...sym[1]];this.id = null;if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C184_r_container_clause=function (sym){this.containers = [{ids : [""]}];this.id = sym[0];if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C185_r_container_clause=function (sym){this.containers = [{ids : [""]},...sym[0]];this.id = null;if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
C186_r_container_clause=function (){this.containers = [{ids : [""]}];this.id = null;if(this.id)if(this.id.ids.length == 1 && this.id.ids[0] == "*"){if(!this.containers)this.containers = [];this.containers.push(this.id);this.id = null;}},
R210_r_filter_clause=()=>null,
C230_r_and_expression=function (sym){this.type = "AND";this.left = sym[0];this.right = sym[2];},
C240_r_or_expression=function (sym){this.type = "OR";this.left = sym[0];this.right = sym[2];},
C250_r_not_expression=function (sym){this.type = "NOT";this.left = sym[1];},
C260_r_wrapped_expression=function (sym){this.type = "MATCH";this.value = sym[0];},
C320_r_created_statement=function (sym){this.type = "CREATED";this.val = sym[1];this.order = sym[2] || 1;},
C321_r_created_statement=function (sym){this.type = "CREATED";this.val = null;this.order = sym[1] || 1;},
C322_r_created_statement=function (sym){this.type = "CREATED";this.val = sym[1];this.order = 1;},
C323_r_created_statement=function (){this.type = "CREATED";this.val = null;this.order = 1;},
C340_r_modified_statement=function (sym){this.type = "MODIFIED";this.val = sym[1];this.order = sym[2] || 1;},
C341_r_modified_statement=function (sym){this.type = "MODIFIED";this.val = null;this.order = sym[1] || 1;},
C342_r_modified_statement=function (sym){this.type = "MODIFIED";this.val = sym[1];this.order = 1;},
C343_r_modified_statement=function (){this.type = "MODIFIED";this.val = null;this.order = 1;},
C360_r_size_statement=function (sym){this.type = "SIZE";this.val = sym[1];this.order = sym[2] || 1;},
C361_r_size_statement=function (sym){this.type = "SIZE";this.val = sym[1];this.order = 1;},
C370_r_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = sym[2];this.order = sym[3] || 1;},
C371_r_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = null;this.order = sym[2] || 1;},
C372_r_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = sym[2];this.order = 1;},
C373_r_tag_statement=function (sym){this.type = "TAG";this.id = sym[1];this.val = null;this.order = 1;},
R410_r_comparison_expression=sym=>({type : "EQUALS_QUANTITATIVE",val : parseFloat(sym[1])}),
R411_r_comparison_expression=sym=>({type : "EQUALS_QUALITATIVE",val : sym[1]}),
R412_r_comparison_expression=sym=>({type : "GREATERTHAN",val : parseFloat(sym[1])}),
R413_r_comparison_expression=sym=>({type : "LESSTHAN",val : parseFloat(sym[1])}),
R450_r_range_expression=sym=>({type : "RANGE",val : [sym[1],sym[2]].map(parseFloat).sort((a,b)=>a < b ? -1 : 1)}),
R451_r_range_expression=sym=>({type : "RANGE",val : [sym[1]].map(parseFloat).sort((a,b)=>a < b ? -1 : 1)}),
R500_r_date_expression=sym=>({type : "DATE",val : [sym[1],sym[2]].map(d=>new Date(d).valueOf()).sort((a,b)=>a < b ? -1 : 1)}),
R501_r_date_expression=sym=>({type : "DATE",val : [sym[1]].map(d=>new Date(d).valueOf()).sort((a,b)=>a < b ? -1 : 1)}),
R530_r_order=()=>-1,
R531_r_order=()=>1,
C550_r_identifier=function (sym){this.ids = sym[0];},
R590_r_string_data=sym=>[sym[0],...sym[1]].join("").trim(),
R591_r_string_data=sym=>[sym[0]].join("").trim(),

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index + 1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [e=>42,
e=>34,
e=>62,
e=>58,
e=>54,
e=>50,
e=>38,
e=>46,
(...v)=>shftf(70,I61_data_insert_point,...v),
e=>66,
(...v)=>redn(5,1,...v),
(...v)=>redv(3079,R30_items,1,0,...v),
(...v)=>redv(3079,R31_items,1,0,...v),
(...v)=>redv(2055,R11_string_data_list,1,0,...v),
(...v)=>redn(10247,1,...v),
(...v)=>redn(11271,1,...v),
(...v)=>redn(13319,1,...v),
e=>166,
e=>162,
e=>158,
e=>154,
(...v)=>(redn(16387,0,...v)),
e=>114,
e=>174,
e=>178,
e=>182,
e=>186,
e=>190,
e=>198,
e=>202,
e=>206,
e=>210,
e=>214,
e=>146,
(...v)=>redv(3083,R32_items,2,0,...v),
(...v)=>redv(3083,R33_items,2,0,...v),
(...v)=>redv(2059,R10_string_data_list,2,0,...v),
(...v)=>redv(12299,R50_undefined621_group,2,0,...v),
e=>218,
(...v)=>redn(14343,1,...v),
(...v)=>redn(15367,1,...v),
(...v)=>rednv(16391,C166_r_query_body,1,0,...v),
(...v)=>rednv(16391,C165_r_query_body,1,0,...v),
(...v)=>rednv(16391,C164_r_query_body,1,0,...v),
(...v)=>rednv(18439,C186_r_container_clause,1,0,...v),
(...v)=>rednv(18439,C185_r_container_clause,1,0,...v),
(...v)=>rednv(18439,C184_r_container_clause,1,0,...v),
e=>250,
(...v)=>redv(17415,R11_string_data_list,1,0,...v),
(...v)=>rednv(56327,C550_r_identifier,1,0,...v),
(...v)=>redv(55303,R11_string_data_list,1,0,...v),
(...v)=>redn(57351,1,...v),
(...v)=>redn(61447,1,...v),
e=>274,
(...v)=>redv(60423,R591_r_string_data,1,0,...v),
e=>278,
(...v)=>redn(64519,1,...v),
(...v)=>redv(21511,R210_r_filter_clause,1,0,...v),
e=>298,
e=>302,
e=>306,
e=>310,
e=>314,
e=>358,
e=>362,
e=>370,
e=>374,
e=>382,
e=>386,
e=>390,
e=>330,
e=>334,
(...v)=>redn(20487,1,...v),
e=>394,
e=>398,
e=>402,
e=>406,
(...v)=>redv(29703,R210_r_filter_clause,1,0,...v),
(...v)=>redn(27655,1,...v),
e=>418,
e=>422,
e=>426,
e=>430,
(...v)=>rednv(6159,C62_data_insert_point,3,0,...v),
e=>438,
(...v)=>rednv(16395,C163_r_query_body,2,0,...v),
(...v)=>rednv(16395,C162_r_query_body,2,0,...v),
(...v)=>rednv(16395,C161_r_query_body,2,0,...v),
(...v)=>rednv(18443,C183_r_container_clause,2,0,...v),
(...v)=>rednv(18443,C182_r_container_clause,2,0,...v),
(...v)=>rednv(18443,C181_r_container_clause,2,0,...v),
(...v)=>redv(17419,R10_string_data_list,2,0,...v),
(...v)=>redv(19467,R32_items,2,0,...v),
(...v)=>redv(55307,R10_string_data_list,2,0,...v),
(...v)=>redv(60427,R590_r_string_data,2,0,...v),
(...v)=>redv(59399,R71_string_data_val_list,1,0,...v),
(...v)=>redn(62471,1,...v),
(...v)=>redv(21515,R50_undefined621_group,2,0,...v),
(...v)=>redn(23559,1,...v),
e=>458,
e=>462,
e=>466,
e=>470,
(...v)=>redn(24583,1,...v),
e=>474,
e=>478,
e=>482,
e=>486,
(...v)=>redn(25607,1,...v),
(...v)=>rednv(26631,C260_r_wrapped_expression,1,0,...v),
(...v)=>redn(26631,1,...v),
(...v)=>redn(30727,1,...v),
(...v)=>rednv(32775,C323_r_created_statement,1,0,...v),
e=>538,
e=>550,
e=>554,
e=>558,
e=>566,
e=>562,
e=>570,
e=>574,
e=>582,
e=>590,
e=>594,
e=>606,
e=>610,
e=>614,
e=>618,
e=>622,
e=>626,
e=>630,
e=>634,
e=>638,
e=>642,
(...v)=>redn(31751,1,...v),
(...v)=>rednv(34823,C343_r_modified_statement,1,0,...v),
(...v)=>redn(33799,1,...v),
e=>658,
e=>662,
(...v)=>redn(35847,1,...v),
(...v)=>redn(20491,2,...v),
e=>670,
(...v)=>redv(29707,R50_undefined621_group,2,0,...v),
(...v)=>redv(28679,R11_string_data_list,1,0,...v),
(...v)=>redn(27659,2,...v),
(...v)=>rednv(6163,C60_data_insert_point,4,0,...v),
(...v)=>(redn(8195,0,...v)),
e=>678,
(...v)=>rednv(16399,C160_r_query_body,3,0,...v),
(...v)=>rednv(18447,C180_r_container_clause,3,0,...v),
(...v)=>redv(59403,R70_string_data_val_list,2,0,...v),
(...v)=>redv(63499,R50_undefined621_group,2,0,...v),
(...v)=>rednv(25611,C250_r_not_expression,2,0,...v),
e=>730,
e=>734,
e=>738,
(...v)=>rednv(32779,C322_r_created_statement,2,0,...v),
e=>746,
e=>750,
(...v)=>rednv(32779,C321_r_created_statement,2,0,...v),
e=>754,
e=>762,
e=>766,
(...v)=>redn(38919,1,...v),
e=>778,
e=>782,
(...v)=>redv(41991,R32_items,1,0,...v),
e=>786,
(...v)=>redn(39943,1,...v),
(...v)=>redn(52231,1,...v),
(...v)=>redn(40967,1,...v),
(...v)=>redn(53255,1,...v),
e=>790,
(...v)=>redn(43015,1,...v),
e=>802,
(...v)=>redn(47111,1,...v),
(...v)=>redv(54279,R530_r_order,1,0,...v),
(...v)=>redv(54279,R531_r_order,1,0,...v),
(...v)=>rednv(34827,C342_r_modified_statement,2,0,...v),
(...v)=>rednv(34827,C341_r_modified_statement,2,0,...v),
(...v)=>rednv(36875,C361_r_size_statement,2,0,...v),
(...v)=>rednv(37899,C373_r_tag_statement,2,0,...v),
e=>830,
e=>826,
(...v)=>redv(5131,R51_undefined621_group,2,0,...v),
(...v)=>redv(4103,R11_string_data_list,1,0,...v),
(...v)=>redn(9223,1,...v),
(...v)=>redn(8199,1,...v),
(...v)=>redv(7175,R71_string_data_val_list,1,0,...v),
(...v)=>rednv(23567,C230_r_and_expression,3,0,...v),
(...v)=>rednv(24591,C240_r_or_expression,3,0,...v),
(...v)=>redv(26639,R50_undefined621_group,3,0,...v),
(...v)=>redv(58383,R50_undefined621_group,3,0,...v),
(...v)=>rednv(32783,C320_r_created_statement,3,0,...v),
(...v)=>redv(41995,R410_r_comparison_expression,2,0,...v),
(...v)=>redv(41995,R411_r_comparison_expression,2,0,...v),
(...v)=>redv(41995,R412_r_comparison_expression,2,0,...v),
(...v)=>redv(41995,R413_r_comparison_expression,2,0,...v),
(...v)=>redv(41995,R50_undefined621_group,2,0,...v),
(...v)=>redn(39947,2,...v),
e=>838,
(...v)=>redn(40971,2,...v),
e=>842,
(...v)=>redn(38923,2,...v),
(...v)=>redv(46091,R451_r_range_expression,2,0,...v),
e=>854,
e=>858,
e=>862,
e=>866,
e=>870,
(...v)=>redv(51211,R501_r_date_expression,2,0,...v),
e=>882,
e=>886,
e=>890,
e=>894,
(...v)=>redn(48135,1,...v),
(...v)=>rednv(34831,C340_r_modified_statement,3,0,...v),
(...v)=>rednv(36879,C360_r_size_statement,3,0,...v),
(...v)=>rednv(37903,C372_r_tag_statement,3,0,...v),
(...v)=>rednv(37903,C371_r_tag_statement,3,0,...v),
(...v)=>redv(28687,R40_data_string_list,3,0,...v),
(...v)=>redv(5135,R50_undefined621_group,3,0,...v),
(...v)=>redv(7179,R70_string_data_val_list,2,0,...v),
(...v)=>redn(39951,3,...v),
(...v)=>redn(40975,3,...v),
(...v)=>redv(46095,R450_r_range_expression,3,0,...v),
e=>906,
(...v)=>redn(44039,1,...v),
(...v)=>redv(51215,R500_r_date_expression,3,0,...v),
(...v)=>redn(49159,1,...v),
(...v)=>rednv(37907,C370_r_tag_statement,4,0,...v),
(...v)=>redv(4111,R40_data_string_list,3,0,...v),
(...v)=>redv(45067,R50_undefined621_group,2,0,...v),
(...v)=>redv(50187,R50_undefined621_group,2,0,...v)],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
v=>lsm(v,gt1),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt3),
v=>lsm(v,gt4),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt5),
v=>lsm(v,gt6),
nf,
v=>lsm(v,gt7),
v=>lsm(v,gt8),
nf,
nf,
v=>lsm(v,gt9),
nf,
nf,
nf,
nf,
v=>lsm(v,gt10),
nf,
nf,
nf,
nf,
v=>lsm(v,gt11),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt12),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt13),
v=>lsm(v,gt14),
nf,
nf,
v=>lsm(v,gt15),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt16),
nf,
nf,
nf,
nf,
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
v=>lsm(v,gt18),
v=>lsm(v,gt19),
v=>lsm(v,gt20),
v=>lsm(v,gt21),
v=>lsm(v,gt22),
nf,
nf,
nf,
v=>lsm(v,gt23),
v=>lsm(v,gt24),
nf,
nf,
nf,
nf,
v=>lsm(v,gt25),
nf,
nf,
v=>lsm(v,gt26),
nf,
nf,
v=>lsm(v,gt27),
nf,
nf,
v=>lsm(v,gt28),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt29),
nf,
nf,
nf,
nf,
v=>lsm(v,gt30),
v=>lsm(v,gt31),
v=>lsm(v,gt32),
v=>lsm(v,gt33),
v=>lsm(v,gt34),
v=>lsm(v,gt35),
v=>lsm(v,gt36),
v=>lsm(v,gt37),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt38),
nf,
v=>lsm(v,gt39),
nf,
nf,
v=>lsm(v,gt40),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt41),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt42),
nf,
v=>lsm(v,gt43),
nf,
nf,
v=>lsm(v,gt44),
v=>lsm(v,gt45),
nf,
nf,
nf,
nf,
v=>lsm(v,gt46),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt47),
v=>lsm(v,gt48),
nf,
nf,
nf,
nf,
v=>lsm(v,gt49),
nf,
nf,
nf,
v=>lsm(v,gt50),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt51),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*$eof*/

    switch (l.ty) {
        case 2:
            //*
            if (SYM_LU.has(l.tx)) return 14;
            /*/
                console.log(l.tx, SYM_LU.has(l.tx), SYM_LU.get(l.tx))
                if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            //*/
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {

    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        RESTARTED = true,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        reduceStack = (e.reduceStack = []),
        ROOT = 10000,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                tk = getToken(l.next(), lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {

                if (tk == 14) {
                    tk = lu.get(l.tx);
                    continue;
                }

                if (l.ty == 8 && l.tl > 1) {
                    // Make sure that special tokens are not getting in the way
                    l.tl = 0;
                    // This will skip the generation of a custom symbol
                    l.next(l, false);

                    if (l.tl == 1)
                        continue;
                }

                if (RECOVERING > 1 && !l.END) {

                    if (tk !== lu.get(l.ty)) {
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], (lex) => getToken(lex, lu));

                if (RECOVERING > 0 && recovery_token >= 0) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$eof")
                        l.throw("Unexpected end of input");

                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:

                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */
                    RESTARTED = true;

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    if (reduceStack.length > 0) {
                        let i = reduceStack.length - 1;
                        while (i > -1) {
                            const item = reduceStack[i--];

                            if (item.index == sp) {
                                item.action(output);
                            } else if (item.index > sp) {
                                reduceStack.length--;
                            } else {
                                break;
                            }
                        }
                    }

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;