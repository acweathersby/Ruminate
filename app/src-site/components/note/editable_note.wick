import {id} from "@model";
import * as editor from "../../ts/editor/text_editor.ts";
import * as bridge from "../../ts/tauri/bridge.ts";
import note_body from "./note_body";
import glow from "@candlelib/glow";

const root = "@root";
const small_size = 65;
let path = "";
let name = "";
let host = null;
let r = 0;
let c = 0;

async function onload(){
    host = await editor.constructEditHost(id);
    //editor.addMarkdownPreviewTarget(host, "@.note-md-preview");
    editor.setReadOnly(false);
    bridge.get_note_name(id).then(n=>name=n);
    bridge.get_note_container_path(id).then(p=>path=p);
}

function onDisconnecting(){
    editor.releaseEditHost(host);
}

function ontransitionin(row, col, trs, anim) {
    anim({
        obj:root,
        opacity: [{tic:100,val:0}, {tic:400, val:1}],
            transform:[
            {tic:100,val:`translateY(${100}px)`},{tic:400,val:`translateY(0)`, eas:glow.easing.ease_out},
        ] })
}

function ontransitionout(row, col, trs, anim) {
    anim({
        obj:root,
        opacity: [{tic:0,val:1}, {tic:200, val:0}],
            transform:[
            {tic:0,val:`translateY(0)`},{tic:300,val:`translateY(${-100}px)`, eas:glow.easing.ease_in_out},
        ] 
    })
}

export default <div class=note> 
    <div class=note-sleeve>
        <div class=note-header>
            <h3 class=note-path>{path}</h3>
            <h1 class=note-title>{name}</h1>
        </div>
        <note_body {host}/>
    </div>
</div>;

<style>
root {
    position:absolute;
    outline:none;
    left:0;
    right:0;
}

.note-sleeve {
    min-width:720px;
    max-width: 640px;
    margin:auto;
}

.note-md-preview pre {
    white-space: pre-wrap
}
</style>