/*
 * This component handles a single view of notes.
 *
 * In the context of Ruminate a view is defined as 
 *
 */

 import {
    active_search_nonce,
    active_search_component,
    active_results,
    active_folder,
    active_search,
    active_search_path
} from "@store";

import {
    note_id_to_proxy_note
} from "../../../ts/primitives/note.ts"

function onclick(e){
    active_search_component = this;
}

 import dsf from "./dynamic_search_field.wick";
 import noteitem from "./note_item.wick";

 let results = [];

 function $(active_results){
    if(active_search_component == this){
       results = active_results;
       console.log({results:results})
    }
 }

 function inputSelect(e){
    active_results = results;
 }

 let d = "a";

 function $1(d){
   active_search= d;
 }


 export default <div>

    <input type=text class=folder-field onclick={inputSelect} value={active_search_component == this ? active_search : d;d}>

    <container
        class=contents
        data={await Promise.all(results.map(note_id_to_proxy_note))}
        filter={m.type == "note"}
    >
        <noteitem/>
    </container>
 </div>;

 <style>
    root {
        width:100%;
        min-height:100px;
        position:relative;
        background:#EBEBEB;
        border-radius:10px;
        padding:5px;
    }

 </style>;